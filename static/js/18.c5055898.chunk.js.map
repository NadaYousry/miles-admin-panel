{"version":3,"sources":["containers/AdminPanel/index.jsx","containers/AdminCalendar/index.jsx"],"names":["ItemsContext","React","createContext","ColumnContext","AdminPanel","useState","id","title","place","price","status","registration_count","startDate","Date","endDate","itemsFromBackend","setItemsFromBackend","items","columnsFromBackend","setColumnsFromBackend","useEffect","isMobileScreen","useWindowResize","className","activeClassName","to","Provider","value","path","fallback","exact","from","AdminCalendar","useContext","data","setData","defaultCurrentDate","defaultCurrentViewName","startDayHour","endDayHour","onCommitChanges","added","changed","deleted","startingAddedId","length","map","appointment","undefined","filter","showCloseButton","fieldName","instances","color"],"mappings":"0WAQaA,EAAeC,IAAMC,gBACrBC,EAAgBF,IAAMC,gBA8JpBE,UA7JI,WAAO,IAAD,EACyBC,mBAAS,CACvD,CACEC,GAAI,IACJC,MAAO,eACPC,MAAO,mBACPC,MAAO,KACPC,OAAQ,SACRC,mBAAoB,QACpBC,UAAW,IAAIC,KAAK,KAAM,EAAG,EAAG,EAAG,IACnCC,QAAS,IAAID,KAAK,KAAM,EAAG,EAAG,GAAI,KAEpC,CACEP,GAAI,IACJC,MAAO,aACPC,MAAO,mBACPC,MAAO,KACPC,OAAQ,YACRC,mBAAoB,MACpBC,UAAW,IAAIC,KAAK,KAAM,EAAG,GAAI,GAAI,GACrCC,QAAS,IAAID,KAAK,KAAM,EAAG,GAAI,GAAI,IAErC,CACEP,GAAI,IACJC,MAAO,eACPC,MAAO,mBACPC,MAAO,KACPC,OAAQ,SACRC,mBAAoB,OACpBC,UAAW,IAAIC,KAAK,KAAM,EAAG,GAAI,EAAG,IACpCC,QAAS,IAAID,KAAK,KAAM,EAAG,GAAI,GAAI,KAErC,CACEP,GAAI,IACJC,MAAO,gBACPC,MAAO,mBACPC,MAAO,MACPC,OAAQ,YACRC,mBAAoB,OACpBC,UAAW,IAAIC,KAAK,KAAM,EAAG,GAAI,GAAI,IACrCC,QAAS,IAAID,KAAK,KAAM,EAAG,GAAI,GAAI,KAErC,CACEP,GAAI,IACJC,MAAO,aACPC,MAAO,mBACPC,MAAO,MACPC,OAAQ,OACRC,mBAAoB,OACpBC,UAAW,IAAIC,KAAK,KAAM,EAAG,GAAI,GAAI,GACrCC,QAAS,IAAID,KAAK,KAAM,EAAG,GAAI,GAAI,OAlDhB,mBAChBE,EADgB,KACEC,EADF,OAqD6BX,mBAAS,CAC1D,CACCC,GAAG,uBACHC,MAAO,oBACPU,MAAOF,GAER,CACET,GAAG,sBACJC,MAAO,WACPU,MAAO,IAER,CACCX,GAAG,wBACHC,MAAO,cACPU,MAAO,IAER,CACCX,GAAG,kBACHC,MAAO,oBACPU,MAAO,MAxEY,mBAqDhBC,EArDgB,KAqDIC,EArDJ,KA2EvBC,qBAAU,WACRD,EAAsB,CACnB,CACCb,GAAG,uBACHC,MAAO,oBACPU,MAAOC,EAAmB,GAAGD,OAC5B,CACDX,GAAG,sBACHC,MAAO,WACPU,MAAOC,EAAmB,GAAGD,OAE9B,CACCX,GAAG,wBACHC,MAAO,cACPU,MAAOC,EAAmB,GAAGD,OAE9B,CACEX,GAAG,kBACJC,MAAO,oBACPU,MAAOC,EAAmB,GAAGD,WAGhC,CAACF,IACJ,IAAMM,EAAiBC,cACvB,OACE,sBAAKC,UAAU,wCAAf,UACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,CAAKA,UAAS,UAAKF,EAAiB,OAAS,GAA/B,WAAd,UACE,cAAC,IAAD,CACEG,gBAAgB,SAChBC,GAAE,iCACFF,UAAU,WAHZ,mBAOA,cAAC,IAAD,CACEC,gBAAgB,SAChBC,GAAE,mCACFF,UAAU,WAHZ,qBAOA,cAAC,IAAD,CACEC,gBAAgB,SAChBC,GAAE,oCACFF,UAAU,WAHZ,2BAUJ,cAAC,IAAD,UACE,cAACvB,EAAa0B,SAAd,CAAuBC,MAAO,CAACZ,EAAkBC,GAAjD,SACE,eAACb,EAAcuB,SAAf,CACEC,MAAO,CAACT,EAAoBC,GAD9B,UAGA,cAAC,IAAD,CAAOS,KAAI,iCAAX,SACI,cAAC,WAAD,CAAUC,SAAU,cAAC,UAAD,IAApB,SACE,cAAC,IAAD,CACER,eAAgBA,QAIxB,cAAC,IAAD,CAAOO,KAAI,mCAAX,SACI,cAAC,WAAD,CAAUC,SAAU,cAAC,UAAD,IAApB,SACE,cAAC,IAAD,QAGF,cAAC,IAAD,CAAOD,KAAI,oCAAX,SACA,cAAC,WAAD,CAAUC,SAAU,cAAC,UAAD,IAApB,SACE,cAAC,IAAD,QAGJ,cAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,qBAAqBN,GAAG,4B,+HC1E1CO,UAhEO,WAAO,IAAD,EACoBC,qBAAWjC,gBAD/B,mBACrBe,EADqB,aAEFV,mBAASU,IAFP,mBAEnBmB,EAFmB,KAEbC,EAFa,KAI5Bf,qBAAU,WAAKe,EAAQpB,KAAoB,CAACA,IAoC1C,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAWmB,KAAMA,EAAjB,UACE,cAAC,IAAD,CACEE,mBAAmB,aACnBC,uBAAuB,UAEzB,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAUC,aAAc,GAAIC,WAAY,KACxC,cAAC,IAAD,CAAcC,gBA7CE,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACvC,GAAIF,EAAO,CACT,IAAMG,EACJV,EAAKW,OAAS,EAAIX,EAAKA,EAAKW,OAAS,GAAGvC,GAAK,EAAI,EACnD6B,EAAQ,GAAD,mBAAKD,GAAL,cAAa5B,GAAIsC,GAAoBH,MAc9C,OAZIC,GACFP,EACED,EAAKY,KAAI,SAACC,GAAD,OACPL,EAAQK,EAAYzC,IAApB,2BACSyC,GAAgBL,EAAQK,EAAYzC,KACzCyC,WAIMC,IAAZL,GACFR,EAAQD,EAAKe,QAAO,SAACF,GAAD,OAAiBA,EAAYzC,KAAOqC,MAEnD,CAAET,WA4BL,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAoBgB,iBAAe,IACnC,cAAC,IAAD,CAAWhB,KAjCD,CAAC,CACfiB,UAAW,SACXC,UAAU,CACR,CACE9C,GAAG,SACH+C,MAAO,WACN,CACD/C,GAAG,OACH+C,MAAO,WACP,CACA/C,GAAG,YACH+C,MAAO,gBAuBP,cAAC,IAAD","file":"static/js/18.c5055898.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport useWindowResize from \"../../cutomHooks/useWindowResize\";\r\nimport { NavLink, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport * as LazyComponents from \"./../../utlis/LazyLoading\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { Suspense } from \"react\";\r\nimport Loader from \"../../components/Loader\";\r\nimport \"./style.css\";\r\nexport const ItemsContext = React.createContext();\r\nexport const ColumnContext = React.createContext();\r\nconst AdminPanel = () => {\r\n  const [itemsFromBackend, setItemsFromBackend] = useState([\r\n    {\r\n      id: \"1\",\r\n      title: \"Tennis Class\",\r\n      place: \"The country club\",\r\n      price: \"60\",\r\n      status: \"active\",\r\n      registration_count: \"15/20\",\r\n      startDate: new Date(2021, 6, 5, 9, 30),\r\n      endDate: new Date(2021, 6, 5, 11, 30),\r\n    },\r\n    {\r\n      id: \"2\",\r\n      title: \"Yoga Class\",\r\n      place: \"The country club\",\r\n      price: \"50\",\r\n      status: \"completed\",\r\n      registration_count: \"5/5\",\r\n      startDate: new Date(2021, 6, 10, 12, 0),\r\n      endDate: new Date(2021, 6, 10, 13, 0),\r\n    },\r\n    {\r\n      id: \"3\",\r\n      title: \"Tennis Class\",\r\n      place: \"The country club\",\r\n      price: \"80\",\r\n      status: \"active\",\r\n      registration_count: \"6/10\",\r\n      startDate: new Date(2021, 6, 20, 9, 30),\r\n      endDate: new Date(2021, 6, 20, 11, 30),\r\n    },\r\n    {\r\n      id: \"4\",\r\n      title: \"Fitness Class\",\r\n      place: \"The country club\",\r\n      price: \"150\",\r\n      status: \"completed\",\r\n      registration_count: \"8/10\",\r\n      startDate: new Date(2021, 6, 21, 14, 30),\r\n      endDate: new Date(2021, 6, 21, 15, 30),\r\n    },\r\n    {\r\n      id: \"5\",\r\n      title: \"Yoga Class\",\r\n      place: \"The country club\",\r\n      price: \"100\",\r\n      status: \"soon\",\r\n      registration_count: \"7/15\",\r\n      startDate: new Date(2021, 6, 18, 12, 0),\r\n      endDate: new Date(2021, 6, 18, 13, 35),\r\n    },\r\n  ]);\r\n  const [columnsFromBackend, setColumnsFromBackend] = useState([\r\n     {\r\n      id:'potentialClassColumn',\r\n      title: \"Potential Classes\",\r\n      items: itemsFromBackend,\r\n    },\r\n     {\r\n       id:'upcomingClassColumn',\r\n      title: \"Upcoming\",\r\n      items: [],\r\n    },\r\n     {\r\n      id:'inProgressClassColumn',\r\n      title: \"In Progress\",\r\n      items: [],\r\n    },\r\n     {\r\n      id:'doneClassColumn',\r\n      title: \"Program Completed\",\r\n      items: [],\r\n    },\r\n  ]);\r\n  useEffect(() => {\r\n    setColumnsFromBackend([\r\n       {\r\n        id:\"potentialClassColumn\" , \r\n        title: \"Potential Classes\",\r\n        items: columnsFromBackend[0].items,\r\n      }, {\r\n        id:\"upcomingClassColumn\" , \r\n        title: \"Upcoming\",\r\n        items: columnsFromBackend[1].items,\r\n      },\r\n       {\r\n        id:\"inProgressClassColumn\" , \r\n        title: \"In Progress\",\r\n        items: columnsFromBackend[2].items,\r\n      },\r\n       {\r\n         id:\"doneClassColumn\" , \r\n        title: \"Program Completed\",\r\n        items: columnsFromBackend[3].items,\r\n      },\r\n    ]);\r\n  }, [itemsFromBackend]);\r\n  const isMobileScreen = useWindowResize();\r\n  return (\r\n    <div className=\"admin-panel-container container-fluid\">\r\n      <div className=\"container\">\r\n        <Nav className={`${isMobileScreen ? \"px-0\" : \"\"} navbar`}>\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            to={`/miles-admin-panel/admin/about`}\r\n            className=\"nav-link\"\r\n          >\r\n            About\r\n          </NavLink>\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            to={`/miles-admin-panel/admin/classes`}\r\n            className=\"nav-link\"\r\n          >\r\n            Classes\r\n          </NavLink>\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            to={`/miles-admin-panel/admin/calendar`}\r\n            className=\"nav-link\"\r\n          >\r\n            Calendar\r\n          </NavLink>\r\n        </Nav>\r\n      </div>\r\n\r\n      <Switch>\r\n        <ItemsContext.Provider value={[itemsFromBackend, setItemsFromBackend]}>\r\n          <ColumnContext.Provider\r\n            value={[columnsFromBackend, setColumnsFromBackend]}\r\n          >\r\n          <Route path={`/miles-admin-panel/admin/about`}>\r\n              <Suspense fallback={<Loader />}>\r\n                <LazyComponents.AdminAboutPage\r\n                  isMobileScreen={isMobileScreen}\r\n                />\r\n              </Suspense>\r\n            </Route>\r\n          <Route path={`/miles-admin-panel/admin/classes`}>\r\n              <Suspense fallback={<Loader />}>\r\n                <LazyComponents.AdminClassesPage />\r\n              </Suspense>\r\n            </Route>\r\n              <Route path={`/miles-admin-panel/admin/calendar`}>\r\n              <Suspense fallback={<Loader />}>\r\n                <LazyComponents.AdminCalendar />\r\n              </Suspense>\r\n            </Route>\r\n            <Redirect exact from=\"/miles-admin-panel\" to=\"admin/about\" />\r\n          </ColumnContext.Provider>\r\n        </ItemsContext.Provider>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { ItemsContext } from \"../AdminPanel\";\r\nimport { ViewState, EditingState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n  Scheduler,\r\n  MonthView,\r\n  Appointments,\r\n  Toolbar,\r\n  DateNavigator,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  EditRecurrenceMenu,\r\n  ViewSwitcher,\r\n  DayView,\r\n  WeekView,\r\n  DragDropProvider,\r\n  TodayButton,\r\n  Resources,\r\n} from \"@devexpress/dx-react-scheduler-material-ui\";\r\nimport \"./styles.css\";\r\nimport {  Paper } from \"@material-ui/core\";\r\nconst AdminCalendar = () => {\r\n  let [itemsFromBackend, setItemsFromBackend] = useContext(ItemsContext);\r\n  const [data, setData] = useState(itemsFromBackend);\r\n\r\nuseEffect(()=>{setData(itemsFromBackend)} ,[itemsFromBackend] )\r\n  const commitChanges = ({ added, changed, deleted }) => {\r\n    if (added) {\r\n      const startingAddedId =\r\n        data.length > 0 ? data[data.length - 1].id + 1 : 0;\r\n      setData([...data, { id: startingAddedId, ...added }]);\r\n    }\r\n    if (changed) {\r\n      setData(\r\n        data.map((appointment) =>\r\n          changed[appointment.id]\r\n            ? { ...appointment, ...changed[appointment.id] }\r\n            : appointment\r\n        )\r\n      );\r\n    }\r\n    if (deleted !== undefined) {\r\n      setData(data.filter((appointment) => appointment.id !== deleted));\r\n    }\r\n    return { data };\r\n  };\r\n  const resource =[{\r\n    fieldName: 'status',\r\n    instances:[\r\n      {\r\n        id:'active',\r\n        color: '#6abf48',\r\n      }, {\r\n        id:\"soon\",\r\n        color: '#ebef04',\r\n      },{\r\n        id:\"completed\",\r\n        color: '#d80c05',\r\n      },\r\n    ],\r\n  }];\r\n  return (\r\n    <Paper >\r\n      <Scheduler data={data}>\r\n        <ViewState\r\n          defaultCurrentDate=\"2021-07-17\"\r\n          defaultCurrentViewName=\"Month\"\r\n        />\r\n        <MonthView />\r\n        <DayView />\r\n        <WeekView startDayHour={10} endDayHour={19} />\r\n        <EditingState onCommitChanges={commitChanges} />\r\n        <Appointments />\r\n        <Toolbar />\r\n        <ViewSwitcher />\r\n        <DateNavigator />\r\n        <TodayButton />\r\n        <EditRecurrenceMenu />\r\n        <AppointmentTooltip showCloseButton  />\r\n        <Resources data={resource}/>\r\n        <DragDropProvider/>\r\n      </Scheduler>\r\n    </Paper>\r\n  );\r\n};\r\nexport default AdminCalendar;\r\n"],"sourceRoot":""}