{"version":3,"sources":["components/CheckBox/index.jsx","components/Message/index.jsx","components/SelectMenu/index.jsx","containers/AdminPanel/index.jsx","components/DropDownMenu/index.jsx","components/AddClassFromModal/index.jsx","components/CheckBoxStyled/index.jsx","components/CheckBoxStyledWithLabel/index.jsx","containers/AdminClassesPage/index.jsx","assets/images/private-lessons/share-icon.svg","components/Button/index.jsx"],"names":["CheckBox","option","showOptions","theme","name","onClick","type","useState","selected","setSelected","className","id","value","htmlFor","Message","title","description","SelectMenuComponent","filters","isOpen","setIsOpen","Toggle","as","Card","Header","eventKey","e","icon","faChevronDown","Collapse","map","filter","index","ItemsContext","React","createContext","ColumnContext","AdminPanel","place","price","status","registration_count","date","time","itemsFromBackend","setItemsFromBackend","potentialClassColumn","items","upcomingClassColumn","inProgressClassColumn","doneClassColumn","columnsFromBackend","setColumnsFromBackend","useEffect","isMobileScreen","useWindowResize","activeClassName","to","path","fallback","Provider","exact","from","DropDownMenu","selectOptions","DropdownButton","faEllipsisH","Dropdown","Item","AddClassFromModal","handleClose","openModal","sucessMessage","setSucessMessage","loader","setLoader","useContext","selectStatus","Modal","show","onHide","setTimeout","size","aria-labelledby","centered","closeButton","Body","Form","onSubmit","taskData","preventDefault","length","toString","target","onSumbitAddTask","Group","controlId","Label","Control","Footer","Button","share","text","Loader","CheckboxContainer","styled","div","Icon","svg","HiddenCheckbox","input","attrs","StyledCheckbox","props","checked","Checkbox","viewBox","points","CheckBoxStyledWithLabel","setChecked","style","fontFamily","onChange","event","AdminClassesPage","setOpenModal","selectedName","setSelectedName","selectedStatusName","setSelectedStatusName","Date","startDate","setStartDate","columns","setColumns","isDragged","setIsDragged","faPlus","onClickButton","isClearable","placeholderText","drop","color","backgroundColor","display","width","overflowX","justifyContent","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","removed","column","copiedItems","onDragStart","Object","entries","columnId","flexDirection","alignItems","marginLeft","marginRight","provided","snapshot","overflow","padding","droppableProps","ref","innerRef","background","isDraggingOver","minHeight","item","draggableId","draggableProps","dragHandleProps","margin","isDragging","faUserAlt","placeholder","ButtonComponent","variant","src","ShareIcon"],"mappings":"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","file":"static/js/9.7d178aef.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\nconst CheckBox = ({ option, showOptions , theme, name ,onClick , type}) => {\r\n  \r\n  const [selected, setSelected] = useState(false);\r\n  const onSelectCheckBox = () => {\r\n    if (selected) {\r\n      setSelected(false);\r\n    } else {\r\n      setSelected(true);\r\n    }\r\n    if(onClick){\r\n    onClick();}\r\n  };\r\n  return (\r\n    <>\r\n      <div className={`${showOptions?\"single-check-box-row\":\"\"}`} >\r\n        <div className=\"checkbox-form-group\">\r\n          <input name={name} type={`${type==='radio' ?'radio' :'checkbox'}`} id={option} className={\"form-check-box\"} value={option}/>\r\n          <label htmlFor={option} className={`form-check-label ${theme===\"green\"?\"green\":\"\"} ${selected?\"checked\":\"\"}`} onClick={onSelectCheckBox}>\r\n            {showOptions &&<span> {option} </span>}\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nconst Message = ({title ,description}) => {\r\n  return (\r\n    <div className=\"message\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 text-center mb-2\">\r\n          <i className=\"far fa-check-circle message-icon\"></i>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <h4>{title}</h4>\r\n          <p>\r\n          {description&&description}  \r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Accordion, Card, Form } from \"react-bootstrap\";\r\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./style.css\";\r\nimport CheckBox from \"../CheckBox\";\r\nconst SelectMenuComponent = ({ filters }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onToggleAccordion = (e) => {\r\n    if (isOpen) {\r\n      setIsOpen(false);\r\n    } else {\r\n      setIsOpen(true);\r\n    }\r\n  };\r\n  return (\r\n    <Accordion className=\"select-menu mb-2\">\r\n      <Card>\r\n        <Accordion.Toggle\r\n          as={Card.Header}\r\n          eventKey={\"0\"}\r\n          className=\"d-flex align-items-center\"\r\n          onClick={(e) => {\r\n            onToggleAccordion(e);\r\n          }}\r\n        >\r\n          <h3 className=\"my-0\">All classes</h3>\r\n          <span className=\"arrow-icon-container\">\r\n            <FontAwesomeIcon\r\n              icon={faChevronDown}\r\n              className={`${isOpen ? \"rotate\" : \"\"} arrow-icon`}\r\n            />\r\n          </span>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey={\"0\"}>\r\n          <form>\r\n            {filters.map((filter, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <CheckBox option={filter.option} showOptions={true} theme={''}/>\r\n                </div>\r\n              );\r\n            })}\r\n          </form>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SelectMenuComponent;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport useWindowResize from \"../../cutomHooks/useWindowResize\";\r\nimport { NavLink, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport * as LazyComponents from \"./../../utlis/LazyLoading\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { Suspense } from \"react\";\r\nimport Loader from \"../../components/Loader\";\r\nimport \"./style.css\";\r\nexport const ItemsContext = React.createContext();\r\nexport const ColumnContext = React.createContext();\r\nconst AdminPanel = () => {\r\n  const [itemsFromBackend, setItemsFromBackend] = useState([\r\n    {\r\n      id: \"1\",\r\n      name: \"Tennis Class\",\r\n      place: \"The country club\",\r\n      price: \"60\",\r\n      status: \"active\",\r\n      registration_count: \"15/20\",\r\n      date: \"June 10th -Aug 30th\",\r\n      time: \"Monday 7:00PM -8:00PM\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      name: \"Yoga Class\",\r\n      place: \"The country club\",\r\n      price: \"50\",\r\n      status: \"completed\",\r\n      registration_count: \"5/5\",\r\n      date: \"June 10th -Aug 30th\",\r\n      time: \"Monday 7:00PM -8:00PM\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      name: \"Tennis Class\",\r\n      place: \"The country club\",\r\n      price: \"80\",\r\n      status: \"active\",\r\n      registration_count: \"6/10\",\r\n      date: \"June 10th -Aug 30th\",\r\n      time: \"Monday 7:00PM -8:00PM\",\r\n    },\r\n    {\r\n      id: \"4\",\r\n      name: \"Fitness Class\",\r\n      place: \"The country club\",\r\n      price: \"150\",\r\n      status: \"completed\",\r\n      registration_count: \"8/10\",\r\n      date: \"June 10th -Aug 30th\",\r\n      time: \"Monday 7:00PM -8:00PM\",\r\n    },\r\n    {\r\n      id: \"5\",\r\n      name: \"Yoga Class\",\r\n      place: \"The country club\",\r\n      price: \"100\",\r\n      status: \"soon\",\r\n      registration_count: \"7/15\",\r\n      date: \"June 10th -Aug 30th\",\r\n      time: \"Monday 7:00PM -8:00PM\",\r\n    },\r\n  ]);\r\n  const [columnsFromBackend, setColumnsFromBackend] = useState({\r\n    potentialClassColumn: {\r\n      name: \"Potential Classes\",\r\n      items: itemsFromBackend,\r\n    },\r\n    upcomingClassColumn: {\r\n      name: \"Upcoming\",\r\n      items: [],\r\n    },\r\n    inProgressClassColumn: {\r\n      name: \"In Progress\",\r\n      items: [],\r\n    },\r\n    doneClassColumn: {\r\n      name: \"Program Completed\",\r\n      items: [],\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    setColumnsFromBackend({\r\n      potentialClassColumn: {\r\n        name: \"Potential Classes\",\r\n        items: columnsFromBackend.potentialClassColumn.items,\r\n      },\r\n      upcomingClassColumn: {\r\n        name: \"Upcoming\",\r\n        items: columnsFromBackend.upcomingClassColumn.items,\r\n      },\r\n      inProgressClassColumn: {\r\n        name: \"In Progress\",\r\n        items: columnsFromBackend.inProgressClassColumn.items,\r\n      },\r\n      doneClassColumn: {\r\n        name: \"Program Completed\",\r\n        items: columnsFromBackend.doneClassColumn.items,\r\n      },\r\n    });\r\n  }, [itemsFromBackend]);\r\n  const isMobileScreen = useWindowResize();\r\n  return (\r\n    <div className=\"admin-panel-container container-fluid\">\r\n      <div className=\"container\">\r\n        <Nav className={`${isMobileScreen ? \"px-0\" : \"\"} navbar`}>\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            to={`/miles-admin-panel/admin/about`}\r\n            className=\"nav-link\"\r\n          >\r\n            About\r\n          </NavLink>\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            to={`/miles-admin-panel/admin/classes`}\r\n            className=\"nav-link\"\r\n          >\r\n            Classes\r\n          </NavLink>\r\n        </Nav>\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route path={`/miles-admin-panel/admin/about`}>\r\n          <Suspense fallback={<Loader />}>\r\n            <LazyComponents.AdminAboutPage isMobileScreen={isMobileScreen} />\r\n          </Suspense>\r\n        </Route>\r\n        <Route path={`/miles-admin-panel/admin/classes`}>\r\n          <Suspense fallback={<Loader />}>\r\n            <ItemsContext.Provider\r\n              value={[itemsFromBackend, setItemsFromBackend]}\r\n            >\r\n              <ColumnContext.Provider\r\n                value={[columnsFromBackend, setColumnsFromBackend]}\r\n              >\r\n                <LazyComponents.AdminClassesPage />\r\n              </ColumnContext.Provider>\r\n            </ItemsContext.Provider>\r\n          </Suspense>\r\n        </Route>\r\n        <Redirect exact from=\"/miles-admin-panel\" to=\"admin/about\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React, { useState } from \"react\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport { faUserAlt, faEllipsisH } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./style.css\";\r\nconst DropDownMenu = ({ selectOptions }) => {\r\n  return (\r\n    <>\r\n      <DropdownButton\r\n      className=\"dropdown-menu-container\"\r\n        title={<FontAwesomeIcon icon={faEllipsisH} className=\" mr-2\" />}\r\n      >\r\n        {selectOptions.map((option, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <Dropdown.Item>{option.option}</Dropdown.Item>\r\n            </div>\r\n          );\r\n        })}\r\n      </DropdownButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DropDownMenu;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport ButtonComponent from \"../Button\";\r\nimport CheckBox from \"../CheckBox\";\r\nimport Loader from \"../Loader\";\r\nimport Message from \"../Message\";\r\nimport SelectMenuComponent from \"../SelectMenu\";\r\nimport { ColumnContext, ItemsContext } from \"./../../containers/AdminPanel\";\r\n\r\nimport \"./style.css\";\r\nconst AddClassFromModal = ({ handleClose, openModal }) => {\r\n  const [sucessMessage, setSucessMessage] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  let [itemsFromBackend, setItemsFromBackend] = useContext(ItemsContext);\r\n  let [columnsFromBackend, setColumnsFromBackend] = useContext(ColumnContext);\r\n\r\n  const selectStatus = [\r\n    {\r\n      option: \"active\",\r\n    },\r\n    {\r\n      option: \"completed\",\r\n    },\r\n    {\r\n      option: \"soon\",\r\n    },\r\n  ];\r\n  useEffect(() => {}, [itemsFromBackend, columnsFromBackend]);\r\n  const handleCloseButton = () => {\r\n    handleClose();\r\n    setTimeout(() => {\r\n      setSucessMessage(false);\r\n    }, 500);\r\n  };\r\n  // submit form\r\n  const onSumbitAddTask = (e) => {\r\n    e.preventDefault();\r\n    let taskData;\r\n    taskData = {\r\n      // this object form api\r\n      id: (itemsFromBackend.length + 1).toString(),\r\n      name: e.target.name.value,\r\n      place: e.target.place.value,\r\n      price: e.target.price.value,\r\n      status:e.target.status.value,\r\n    };\r\n    setItemsFromBackend([...itemsFromBackend, taskData]);\r\n    setColumnsFromBackend({\r\n      potentialClassColumn: {\r\n        name: \"Potential Classes\",\r\n        items: [...columnsFromBackend.potentialClassColumn.items, taskData],\r\n      },\r\n      upcomingClassColumn: {\r\n        name: \"Upcoming\",\r\n        items: columnsFromBackend.upcomingClassColumn.items,\r\n      },\r\n      inProgressClassColumn: {\r\n        name: \"In Progress\",\r\n        items: columnsFromBackend.inProgressClassColumn.items,\r\n      },\r\n      doneClassColumn: {\r\n        name: \"Program Completed\",\r\n        items: columnsFromBackend.doneClassColumn.items,\r\n      },\r\n    });\r\n    // here i handle loader by my hand but it should be handled in interceptor when calling api\r\n    setLoader(true);\r\n    setTimeout(() => {\r\n      setLoader(false);\r\n      setSucessMessage(true);\r\n    }, 500);\r\n  };\r\n  const renderLoader = () => {\r\n    return (\r\n      <div className=\"loading-modal-container\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  };\r\n  const renderModalContent = () => {\r\n    return (\r\n      <>\r\n        <Form onSubmit={(e) => onSumbitAddTask(e)} id=\"addTaskForm\">\r\n          <Form.Group controlId=\"\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"form-data\">\r\n                  <Form.Label>Add Class</Form.Label>\r\n                  <Form.Control type=\"text\" name=\"name\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <div className=\"form-data\">\r\n                  <Form.Label>Place</Form.Label>\r\n                  <Form.Control type=\"text\" name=\"place\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <div className=\"form-data\">\r\n                  <Form.Label>Price</Form.Label>\r\n                  <Form.Control type=\"text\" name=\"price\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <div className=\"form-data\">\r\n                  <Form.Label>status</Form.Label>\r\n                  {selectStatus.map((status, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <CheckBox\r\n                          showOptions={true}\r\n                          option={status.option}\r\n                          name=\"status\"\r\n                          type=\"radio\"\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Modal.Footer>\r\n              <div className=\"button\">\r\n                <ButtonComponent\r\n                  share={\"\"}\r\n                  text={\"Submit\"}\r\n                  theme={\"light-green\"}\r\n                  type={\"submit\"}\r\n                />\r\n              </div>\r\n            </Modal.Footer>\r\n          </Form.Group>\r\n        </Form>\r\n      </>\r\n    );\r\n  };\r\n  const renderSucessMessage = () => {\r\n    return <Message title=\"Class Added Successfuly\" />;\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={openModal}\r\n        onHide={handleCloseButton}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"contact-form \"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <h3>Add Class</h3>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          {!loader && !sucessMessage && renderModalContent()}\r\n          {loader && renderLoader()}\r\n          {sucessMessage && renderSucessMessage()}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddClassFromModal;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst CheckboxContainer = styled.div`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`\r\n\r\nconst Icon = styled.svg`\r\n  fill: none;\r\n  stroke: white;\r\n  stroke-width: 2px;\r\n`\r\n// Hide checkbox visually but remain accessible to screen readers.\r\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n  clippath: inset(50%);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n`\r\n\r\nconst StyledCheckbox = styled.div`\r\n  display: flex;\r\n  width: 16px;\r\n  height: 16px;\r\n  background: ${props => (props.checked ? '#6abf48' : '#ebebeb')};\r\n  border-radius: 50%;\r\n  transition: all 150ms;\r\ncursor:pointer;\r\n\r\n  ${HiddenCheckbox}:hover + & {\r\n    box-shadow: 0 0 0 2px #6abf4836;\r\n  }\r\n  ${Icon} {\r\n    visibility: ${props => (props.checked ? 'visible' : 'hidden')}\r\n  }\r\n`\r\n\r\nconst Checkbox = ({ className, checked, ...props }) => (\r\n  <CheckboxContainer className={className}>\r\n    <HiddenCheckbox checked={checked} {...props} />\r\n    <StyledCheckbox checked={checked}>\r\n      <Icon viewBox=\"0 0 24 24\">\r\n        <polyline points=\"20 6 9 17 4 12\" />\r\n      </Icon>\r\n    </StyledCheckbox>\r\n  </CheckboxContainer>\r\n)\r\n\r\nexport default Checkbox\r\n","import React, { useState } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport Checkbox from \"./../CheckBoxStyled\";\r\n\r\nconst CheckBoxStyledWithLabel = ({}) => {\r\n  const [checked, setChecked] = useState();\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div style={{ fontFamily: \"system-ui\" }}>\r\n      <label>\r\n        <Checkbox checked={checked} onChange={handleCheckboxChange} />\r\n        <span ></span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckBoxStyledWithLabel;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { Card, Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport { faUserAlt, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport DropDownMenu from \"../../components/DropDownMenu\";\r\nimport ButtonComponent from \"../../components/Button\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./style.css\";\r\nimport AddClassFromModal from \"../../components/AddClassFromModal\";\r\nimport { ColumnContext } from \"../AdminPanel\";\r\nimport CheckBoxStyledWithLabel from \"../../components/CheckBoxStyledWithLabel\";\r\n\r\nfunction AdminClassesPage() {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [selectedName, setSelectedName] = useState(\"\");\r\n  const [selectedStatusName, setSelectedStatusName] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(new Date());\r\n\r\n  const handleCloseModal = () => setOpenModal(false);\r\n  const handleOpenModal = () => setOpenModal(true);\r\n  let [columnsFromBackend, setColumnsFromBackend] = useContext(ColumnContext);\r\n  const [columns, setColumns] = useState(columnsFromBackend);\r\n  const [isDragged, setIsDragged] = useState(false);\r\n  const selectStatus = [\r\n    { color: \"#6abf48\", option: \"Active\" },\r\n    { color: \"#ebef04\", option: \"Soon\" },\r\n    { color: \"#d80c05\", option: \"Completed\" },\r\n  ];\r\n  const selectActivities = [\r\n    { option: \"Tennis\" },\r\n    { option: \"Pilate\" },\r\n    { option: \"Fitness\" },\r\n  ];\r\n  useEffect(() => {\r\n    setColumns(columnsFromBackend);\r\n  }, [columnsFromBackend]);\r\n\r\n  useEffect(() => {\r\n    if (isDragged) {\r\n      setColumnsFromBackend(columns);\r\n      setIsDragged(false);\r\n    }\r\n  }, [columns]);\r\n  const onDragEnd = (result, columns, setColumns) => {\r\n    if (!result.destination) return;\r\n    const { source, destination } = result;\r\n    if (source.droppableId !== destination.droppableId) {\r\n      const sourceColumn = columns[source.droppableId];\r\n      const destColumn = columns[destination.droppableId];\r\n      const sourceItems = [...sourceColumn.items];\r\n      const destItems = [...destColumn.items];\r\n      const [removed] = sourceItems.splice(source.index, 1);\r\n      destItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...sourceColumn,\r\n          items: sourceItems,\r\n        },\r\n        [destination.droppableId]: {\r\n          ...destColumn,\r\n          items: destItems,\r\n        },\r\n      });\r\n    } else {\r\n      const column = columns[source.droppableId];\r\n      const copiedItems = [...column.items];\r\n      const [removed] = copiedItems.splice(source.index, 1);\r\n      copiedItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...column,\r\n          items: copiedItems,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"container drag-and-drop-container\">\r\n        <div className=\"controls row\">\r\n          <div className=\"add-container col-12 col-lg-4 col-md-4 mb-2\">\r\n            <div className={\"add-new-task\"}>\r\n              <ButtonComponent\r\n                theme={\"green\"}\r\n                text={`Add New Class`}\r\n                icon={<FontAwesomeIcon icon={faPlus} className=\" mr-2\" />}\r\n                onClickButton={handleOpenModal}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"filter-container col-12 col-md-5 col-lg-5 d-flex\">\r\n            <p>filter: </p>\r\n            <div className=\"dropDown-menu\">\r\n              <DatePicker\r\n                className=\"dropdown-toggle btn btn-primary date-picker\"\r\n                selected={startDate}\r\n                onChange={(date) => setStartDate(date)}\r\n                isClearable\r\n                placeholderText=\"Select Day\"\r\n              />\r\n            </div>\r\n            <div className=\"dropDown-menu\">\r\n              <DropdownButton\r\n                id=\"dropdown-item-button\"\r\n                drop=\"down\"\r\n                title={selectedName ? selectedName : \"Activity\"}\r\n              >\r\n                {selectActivities.map((option, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Dropdown.Item\r\n                        as=\"li\"\r\n                        onClick={() => {\r\n                          setSelectedName(option.option);\r\n                        }}\r\n                        className=\"dropDown-list\"\r\n                      >\r\n                        <span> {option.option}</span>\r\n                      </Dropdown.Item>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </DropdownButton>\r\n            </div>\r\n          </div>\r\n          <div className=\"sort col-12 col-lg-3 col-md-3 d-flex\">\r\n            <p>sort: </p>\r\n            <div className=\"dropDown-menu\">\r\n              <DropdownButton\r\n                id=\"dropdown-item-button\"\r\n                title={selectedStatusName ? selectedStatusName : \"Status\"}\r\n              >\r\n                {selectStatus.map((option, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Dropdown.Item\r\n                        as=\"li\"\r\n                        onClick={() => {\r\n                          setSelectedStatusName(option.option);\r\n                        }}\r\n                        className=\"dropDown-list\"\r\n                      >\r\n                        <span\r\n                          className=\"circle d-inline-block\"\r\n                          style={{\r\n                            backgroundColor: option.color,\r\n                          }}\r\n                        ></span>\r\n                        <span> {option.option}</span>\r\n                      </Dropdown.Item>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </DropdownButton>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            overflowX: \"auto\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <DragDropContext\r\n            onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\r\n            onDragStart={() => {\r\n              setIsDragged(true);\r\n            }}\r\n          >\r\n            {Object.entries(columns)?.map(([columnId, column], index) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  key={columnId}\r\n                >\r\n                  <div style={{ marginLeft: 8, marginRight: 8 }}>\r\n                    <Droppable droppableId={columnId} key={columnId}>\r\n                      {(provided, snapshot) => {\r\n                        return (\r\n                          <>\r\n                            <div\r\n                              className=\"column-heading w-100\"\r\n                              style={{ overflow: \"auto\" }}\r\n                            >\r\n                              <h3\r\n                                className={`m-0 ${column.name}`}\r\n                                style={{\r\n                                  padding: 10,\r\n                                }}\r\n                              >\r\n                                {column.name}\r\n                              </h3>\r\n                            </div>\r\n                            <Card\r\n                              {...provided.droppableProps}\r\n                              ref={provided.innerRef}\r\n                              style={{\r\n                                background: snapshot.isDraggingOver\r\n                                  ? \"#6abf4836\"\r\n                                  : \"white\",\r\n                                width: 250,\r\n                                padding: 5,\r\n                                overflow: \"hidden\",\r\n                                minHeight: 500,\r\n                              }}\r\n                            >\r\n                              {column?.items?.map((item, index) => {\r\n                                return (\r\n                                  <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}\r\n                                  >\r\n                                    {(provided, snapshot) => {\r\n                                      return (\r\n                                        <Card\r\n                                          className=\"class-card\"\r\n                                          ref={provided.innerRef}\r\n                                          {...provided.draggableProps}\r\n                                          {...provided.dragHandleProps}\r\n                                          style={{\r\n                                            padding: 10,\r\n                                            margin: \"0 0 2% 0\",\r\n                                            backgroundColor: snapshot.isDragging\r\n                                              ? \"#ffffff\"\r\n                                              : \"#ffffff\",\r\n                                            ...provided.draggableProps.style,\r\n                                          }}\r\n                                        >\r\n                                          <div className=\"mb-0 d-flex align-items-start justify-content-between\">\r\n                                            <p className=\"name mb-0\">\r\n                                              {item.name}\r\n                                            </p>\r\n                                            <div\r\n                                              className=\"circle\"\r\n                                              style={{\r\n                                                backgroundColor:\r\n                                                  item.status === \"active\"\r\n                                                    ? \"#6abf48\"\r\n                                                    : item.status ===\r\n                                                      \"completed\"\r\n                                                    ? \"#d80c05\"\r\n                                                    : \"#ebef04\",\r\n                                              }}\r\n                                            ></div>\r\n                                            \r\n                                          </div>\r\n                                          <div className=\"mb-2 d-flex align-items-start justify-content-between\">\r\n                                            <div className=\"time-and-date\">\r\n                                              <p className=\"mb-0\">{item.date}</p>\r\n                                              <p className=\"mb-0\">{item.time}</p>\r\n                                            </div>\r\n                                          <CheckBoxStyledWithLabel\r\n                                              showOptions={false}\r\n                                              option={item.id}\r\n                                              name=\"status\"\r\n                                              type=\"checkbox\"\r\n                                            />\r\n                                          </div>\r\n                                          \r\n                                          <div className=\"mb-2\">\r\n                                            <span className=\"place\">\r\n                                              {item.place}\r\n                                            </span>\r\n                                          </div>\r\n                                          <div className=\"user-container d-flex align-items-end justify-content-between\">\r\n                                            <div className=\"user\">\r\n                                              <FontAwesomeIcon\r\n                                                icon={faUserAlt}\r\n                                                className=\" mr-2\"\r\n                                              />\r\n                                              <p className=\"price mr-2\">{item.registration_count}</p>\r\n                                              <p className=\"price\">{`${item.price}$`}</p>\r\n                                            </div>\r\n                                            <div className=\"setting\">\r\n                                              <DropDownMenu\r\n                                                selectOptions={[\r\n                                                  { option: \"Make a copy\" },\r\n                                                  { option: \"Edit\" },\r\n                                                  { option: \"Active\" },\r\n                                                ]}\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </Card>\r\n                                      );\r\n                                    }}\r\n                                  </Draggable>\r\n                                );\r\n                              })}\r\n                              {provided.placeholder}\r\n                            </Card>\r\n                          </>\r\n                        );\r\n                      }}\r\n                    </Droppable>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </DragDropContext>\r\n        </div>\r\n      </section>\r\n\r\n      <AddClassFromModal handleClose={handleCloseModal} openModal={openModal} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminClassesPage;\r\n","export default __webpack_public_path__ + \"static/media/share-icon.dfe15492.svg\";","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport ShareIcon from \"./../../assets/images/private-lessons/share-icon.svg\";\r\nimport \"./style.css\";\r\nconst ButtonComponent = ({ text, theme, share, onClickButton, type, icon }) => {\r\n  return (\r\n    <Button\r\n      variant=\"primary \"\r\n      className={`${theme}-btn ml-auto btn ${theme} ${\r\n        share ? \"share-btn\" : \"\"\r\n      }`}\r\n      onClick={onClickButton}\r\n      type={type}\r\n    >\r\n      {share && (\r\n        <span className=\"mr-2\">\r\n          <img src={ShareIcon} />\r\n        </span>\r\n      )}\r\n      <span className={`${icon ? \"mr-2\" : \"\"}`}> {text}</span>\r\n      {icon && <span>{icon}</span>}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonComponent;\r\n"],"sourceRoot":""}