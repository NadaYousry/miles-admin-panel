{"version":3,"sources":["components/CheckBoxInput/index.jsx","components/CheckBox/index.jsx","components/Message/index.jsx","components/ContactFromModal/index.jsx","components/DropDown/index.jsx","containers/AdminPanel/index.jsx","components/AddClassFrom/index.jsx","components/SettingCardDropDownMenu/index.jsx","containers/DragappleCard/index.jsx","containers/DroppableColumn/index.jsx","containers/AdminClassesPage/index.jsx","assets/images/private-lessons/share-icon.svg","components/Button/index.jsx"],"names":["CheckBoxInput","checked","name","theme","props","className","defaultChecked","viewBox","style","visibility","points","CheckBox","showOptions","option","type","toggleSelectOtherCheckBox","useState","setChecked","onChange","event","target","Message","title","description","ContactFromModal","handleClose","openModal","content","loader","sucessMessage","show","onHide","size","aria-labelledby","centered","Header","closeButton","Body","DropDown","selecteItemsArray","selectElemntName","setSelectElemntName","id","map","index","Item","as","onClick","backgroundColor","color","ItemsContext","React","createContext","ColumnContext","AdminPanel","place","price","status","registration_count","startDate","Date","endDate","itemsFromBackend","setItemsFromBackend","potentialClassColumn","items","upcomingClassColumn","inProgressClassColumn","doneClassColumn","columnsFromBackend","setColumnsFromBackend","useEffect","isMobileScreen","useWindowResize","activeClassName","to","path","fallback","Provider","value","exact","from","AddClassFrom","setSucessMessage","setLoader","useContext","Form","onSubmit","e","taskData","console","log","preventDefault","length","toString","setTimeout","onSumbitAddTask","Group","controlId","TextField","label","Label","InputLabelProps","shrink","Modal","Footer","Button","share","text","SettingCardDropDownMenu","selectOptions","DropdownButton","icon","faEllipsisH","Dropdown","DragappleCard","snapshot","item","isEdit","provided","Card","ref","innerRef","draggableProps","dragHandleProps","padding","margin","isDragging","boxShadow","moment","format","faUserAlt","DroppableColumn","columnId","column","droppableId","overflow","droppableProps","background","isDraggingOver","width","minHeight","draggableId","placeholder","AdminClassesPage","setOpenModal","handleCloseModal","columns","setColumns","isDragged","setIsDragged","handleCloseButton","faPlus","onClickButton","display","overflowX","justifyContent","onDragEnd","result","destination","source","sourceColumn","destColumn","sourceItems","destItems","splice","removed","copiedItems","onDragStart","Object","entries","flexDirection","alignItems","marginLeft","marginRight","ButtonComponent","variant","src","ShareIcon"],"mappings":"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","file":"static/js/11.8f9bb03f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\nconst CheckBoxInput = ({ checked, name , theme ,  ...props }) => (\r\n  <div className={`checkbox-container mr-2 ${theme?theme:\"\"}`}>\r\n    <input\r\n      className=\"check-input\"\r\n      defaultChecked={checked}\r\n      name={name}\r\n      {...props}\r\n    />\r\n    <div className={`styled-checkbox ${checked?\"checked\" :\"\"}`} checked={checked} >\r\n      <svg\r\n        className=\"checkbox-icon\"\r\n        viewBox=\"0 0 24 24\"\r\n        style={{\r\n          visibility: checked ? \"visible\" : \"hidden\",\r\n        }}\r\n      >\r\n        <polyline points=\"20 6 9 17 4 12\" />\r\n      </svg>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default CheckBoxInput;\r\n","import React, { useState } from \"react\";\r\nimport CheckBoxInput from \"./../CheckBoxInput\";\r\nimport './style.css';\r\n\r\nconst CheckBox = ({showOptions , option , type  ,name , toggleSelectOtherCheckBox , theme}) => {\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    setChecked(event.target.checked);\r\n    if(toggleSelectOtherCheckBox){\r\n      toggleSelectOtherCheckBox()\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkbox-label-container\">\r\n      <label>\r\n        <CheckBoxInput theme={theme} checked={checked} onChange={handleCheckboxChange} name={name} type={type}/>\r\n        {showOptions&&<span >{option}</span>}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nconst Message = ({title ,description}) => {\r\n  return (\r\n    <div className=\"message\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 text-center mb-2\">\r\n          <i className=\"far fa-check-circle message-icon\"></i>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <h4>{title}</h4>\r\n          <p>\r\n          {description&&description}  \r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, {  useState } from \"react\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport Loader from \"../Loader\";\r\nimport Message from \"../Message\";\r\nimport \"./style.css\";\r\nconst ContactFromModal = ({ handleClose, openModal , content , loader , sucessMessage }) => {\r\n  const renderLoader = () => {\r\n    return (\r\n      <div className=\"loading-modal-container\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const renderSucessMessage = () => {\r\n    return <Message title={'Thank You!'} description={'Your submission has been received. You Will be Contacted Shortly'}/>;\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={openModal}\r\n        onHide={handleClose}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"contact-form \"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <h3>Get in touch</h3>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          {!loader && !sucessMessage && content}\r\n          {loader && renderLoader()}\r\n          {sucessMessage && renderSucessMessage()}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactFromModal;\r\n","import React, { useState } from \"react\";\r\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\nconst DropDown = ({selecteItemsArray , name}) => {\r\n  \r\n  const [selectElemntName, setSelectElemntName] = useState(\"\");\r\n  return (\r\n    <>\r\n      <DropdownButton\r\n        id=\"dropdown-item-button\"\r\n        title={selectElemntName ? selectElemntName : name}\r\n      >\r\n        {selecteItemsArray.map((option, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <Dropdown.Item\r\n                as=\"li\"\r\n                onClick={() => {\r\n                  setSelectElemntName(option.option);\r\n                }}\r\n                className=\"dropDown-list\"\r\n              >\r\n                <span\r\n                  className=\"circle d-inline-block\"\r\n                  style={{\r\n                    backgroundColor: option.color,\r\n                  }}\r\n                ></span>\r\n                <span> {option.option}</span>\r\n              </Dropdown.Item>\r\n            </div>\r\n          );\r\n        })}\r\n      </DropdownButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport useWindowResize from \"../../cutomHooks/useWindowResize\";\r\nimport { NavLink, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport * as LazyComponents from \"./../../utlis/LazyLoading\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { Suspense } from \"react\";\r\nimport Loader from \"../../components/Loader\";\r\nimport \"./style.css\";\r\nexport const ItemsContext = React.createContext();\r\nexport const ColumnContext = React.createContext();\r\nconst AdminPanel = () => {\r\n  const [itemsFromBackend, setItemsFromBackend] = useState([\r\n    {\r\n      id: \"1\",\r\n      title: \"Tennis Class\",\r\n      place: \"The country club\",\r\n      price: \"60\",\r\n      status: \"active\",\r\n      registration_count: \"15/20\",\r\n      startDate: new Date(2021, 6, 5, 9, 30),\r\n      endDate: new Date(2021, 6, 5, 11, 30),\r\n    },\r\n    {\r\n      id: \"2\",\r\n      title: \"Yoga Class\",\r\n      place: \"The country club\",\r\n      price: \"50\",\r\n      status: \"completed\",\r\n      registration_count: \"5/5\",\r\n      startDate: new Date(2021, 6, 10, 12, 0),\r\n      endDate: new Date(2021, 6, 10, 13, 0),\r\n    },\r\n    {\r\n      id: \"3\",\r\n      title: \"Tennis Class\",\r\n      place: \"The country club\",\r\n      price: \"80\",\r\n      status: \"active\",\r\n      registration_count: \"6/10\",\r\n      startDate: new Date(2021, 6, 20, 9, 30),\r\n      endDate: new Date(2021, 6, 20, 11, 30),\r\n    },\r\n    {\r\n      id: \"4\",\r\n      title: \"Fitness Class\",\r\n      place: \"The country club\",\r\n      price: \"150\",\r\n      status: \"completed\",\r\n      registration_count: \"8/10\",\r\n      startDate: new Date(2021, 6, 21, 14, 30),\r\n      endDate: new Date(2021, 6, 21, 15, 30),\r\n    },\r\n    {\r\n      id: \"5\",\r\n      title: \"Yoga Class\",\r\n      place: \"The country club\",\r\n      price: \"100\",\r\n      status: \"soon\",\r\n      registration_count: \"7/15\",\r\n      startDate: new Date(2021, 6, 18, 12, 0),\r\n      endDate: new Date(2021, 6, 18, 13, 35),\r\n    },\r\n  ]);\r\n  const [columnsFromBackend, setColumnsFromBackend] = useState({\r\n    potentialClassColumn: {\r\n      title: \"Potential Classes\",\r\n      items: itemsFromBackend,\r\n    },\r\n    upcomingClassColumn: {\r\n      title: \"Upcoming\",\r\n      items: [],\r\n    },\r\n    inProgressClassColumn: {\r\n      title: \"In Progress\",\r\n      items: [],\r\n    },\r\n    doneClassColumn: {\r\n      title: \"Program Completed\",\r\n      items: [],\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    setColumnsFromBackend({\r\n      potentialClassColumn: {\r\n        title: \"Potential Classes\",\r\n        items: columnsFromBackend.potentialClassColumn.items,\r\n      },\r\n      upcomingClassColumn: {\r\n        title: \"Upcoming\",\r\n        items: columnsFromBackend.upcomingClassColumn.items,\r\n      },\r\n      inProgressClassColumn: {\r\n        title: \"In Progress\",\r\n        items: columnsFromBackend.inProgressClassColumn.items,\r\n      },\r\n      doneClassColumn: {\r\n        title: \"Program Completed\",\r\n        items: columnsFromBackend.doneClassColumn.items,\r\n      },\r\n    });\r\n  }, [itemsFromBackend]);\r\n  const isMobileScreen = useWindowResize();\r\n  return (\r\n    <div className=\"admin-panel-container container-fluid\">\r\n      <div className=\"container\">\r\n        <Nav className={`${isMobileScreen ? \"px-0\" : \"\"} navbar`}>\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            to={`/miles-admin-panel/admin/about`}\r\n            className=\"nav-link\"\r\n          >\r\n            About\r\n          </NavLink>\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            to={`/miles-admin-panel/admin/classes`}\r\n            className=\"nav-link\"\r\n          >\r\n            Classes\r\n          </NavLink>\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            to={`/miles-admin-panel/admin/calendar`}\r\n            className=\"nav-link\"\r\n          >\r\n            Calendar\r\n          </NavLink>\r\n        </Nav>\r\n      </div>\r\n\r\n      <Switch>\r\n              <Route path={`/miles-admin-panel/admin/about`}>\r\n          <Suspense fallback={<Loader />}>\r\n            <LazyComponents.AdminAboutPage isMobileScreen={isMobileScreen} />\r\n          </Suspense>\r\n        </Route>\r\n        <ItemsContext.Provider value={[itemsFromBackend, setItemsFromBackend]}>\r\n          <ColumnContext.Provider\r\n            value={[columnsFromBackend, setColumnsFromBackend]}\r\n          >\r\n          <Route path={`/miles-admin-panel/admin/classes`}>\r\n              <Suspense fallback={<Loader />}>\r\n                <LazyComponents.AdminClassesPage />\r\n              </Suspense>\r\n            </Route>\r\n              <Route path={`/miles-admin-panel/admin/calendar`}>\r\n              <Suspense fallback={<Loader />}>\r\n                <LazyComponents.AdminCalendar />\r\n              </Suspense>\r\n            </Route>\r\n          </ColumnContext.Provider>\r\n        </ItemsContext.Provider>\r\n              <Redirect exact from=\"/miles-admin-panel\" to=\"admin/about\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import { TextField } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport ButtonComponent from \"../Button\";\r\nimport CheckBox from \"../CheckBox\";\r\nimport Loader from \"../Loader\";\r\nimport Message from \"../Message\";\r\nimport { ColumnContext, ItemsContext } from \"./../../containers/AdminPanel\";\r\n\r\nimport \"./style.css\";\r\nconst AddClassFrom = ({ setSucessMessage, setLoader }) => {\r\n  let [itemsFromBackend, setItemsFromBackend] = useContext(ItemsContext);\r\n  let [columnsFromBackend, setColumnsFromBackend] = useContext(ColumnContext);\r\n\r\n  const selectStatus = [\r\n    {\r\n      option: \"active\",\r\n    },\r\n    {\r\n      option: \"completed\",\r\n    },\r\n    {\r\n      option: \"soon\",\r\n    },\r\n  ];\r\n  useEffect(() => {}, [itemsFromBackend, columnsFromBackend]);\r\n  // submit form\r\n  const onSumbitAddTask = (e) => {\r\n    console.log(e.target.startDate.value);\r\n    e.preventDefault();\r\n    let taskData;\r\n    taskData = {\r\n      // this object form api\r\n      id: (itemsFromBackend.length + 1).toString(),\r\n      title: e.target.title.value,\r\n      place: e.target.place.value,\r\n      price: e.target.price.value,\r\n      status: e.target.status.value,\r\n      startDate: e.target.startDate.value,\r\n      endDate: e.target.endDate.value,\r\n    };\r\n    setItemsFromBackend([...itemsFromBackend, taskData]);\r\n    setColumnsFromBackend({\r\n      potentialClassColumn: {\r\n        title: \"Potential Classes\",\r\n        items: [...columnsFromBackend.potentialClassColumn.items, taskData],\r\n      },\r\n      upcomingClassColumn: {\r\n        title: \"Upcoming\",\r\n        items: columnsFromBackend.upcomingClassColumn.items,\r\n      },\r\n      inProgressClassColumn: {\r\n        title: \"In Progress\",\r\n        items: columnsFromBackend.inProgressClassColumn.items,\r\n      },\r\n      doneClassColumn: {\r\n        title: \"Program Completed\",\r\n        items: columnsFromBackend.doneClassColumn.items,\r\n      },\r\n    });\r\n    // here i handle loader by my hand but it should be handled in interceptor when calling api\r\n    setLoader(true);\r\n    setTimeout(() => {\r\n      setLoader(false);\r\n      setSucessMessage(true);\r\n      taskData = {\r\n        // this object form api\r\n        id: \"\",\r\n        title: \"\",\r\n        place: \"\",\r\n        price: \"\",\r\n        status: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n      };\r\n    }, 500);\r\n  };\r\n  return (\r\n    <>\r\n      <Form onSubmit={(e) => onSumbitAddTask(e)} id=\"addTaskForm\">\r\n        <Form.Group controlId=\"\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"form-data\">\r\n                <TextField id=\"title\" label=\"Class Name\" type=\"text\" name=\"title\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <div className=\"form-data\">\r\n                <TextField id=\"place\" label=\"Place\" type=\"text\" name=\"place\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <div className=\"form-data\">\r\n                <TextField id=\"price\" label=\"Price\" type=\"text\" name=\"price\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <div className=\"form-data\">\r\n                <Form.Label>status</Form.Label>\r\n                {selectStatus.map((status, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <CheckBox\r\n                        showOptions={true}\r\n                        option={status.option}\r\n                        name=\"status\"\r\n                        type=\"radio\"\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <TextField\r\n                id=\"datetime-local\"\r\n                label=\"Start Date\"\r\n                type=\"datetime-local\"\r\n                name=\"startDate\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <TextField\r\n                id=\"datetime-local\"\r\n                label=\"End Date\"\r\n                type=\"datetime-local\"\r\n                name=\"endDate\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <Modal.Footer>\r\n            <div className=\"button\">\r\n              <ButtonComponent\r\n                share={\"\"}\r\n                text={\"Submit\"}\r\n                theme={\"light-green\"}\r\n                type={\"submit\"}\r\n              />\r\n            </div>\r\n          </Modal.Footer>\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddClassFrom;\r\n","import React, { useState } from \"react\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport { faUserAlt, faEllipsisH } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./style.css\";\r\nconst SettingCardDropDownMenu = ({ selectOptions }) => {\r\n  return (\r\n    <>\r\n      <DropdownButton\r\n      className=\"dropdown-menu-container\"\r\n        title={<FontAwesomeIcon icon={faEllipsisH} className=\" mr-2\" />}\r\n      >\r\n        {selectOptions.map((option, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <Dropdown.Item>{option.option}</Dropdown.Item>\r\n            </div>\r\n          );\r\n        })}\r\n      </DropdownButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SettingCardDropDownMenu;\r\n","import React from \"react\";\r\nimport { faUserAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SettingCardDropDownMenu from \"../../components/SettingCardDropDownMenu\";\r\nimport CheckBox from \"../../components/CheckBox\";\r\nimport moment from \"moment\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport \"./style.css\";\r\n\r\nconst DragappleCard = ({ snapshot, item, isEdit, ...provided }) => {\r\n  console.log(item, isEdit);\r\n  return (\r\n    <>\r\n      {item && (\r\n        <Card\r\n          className=\"class-card\"\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          style={\r\n            provided && snapshot\r\n              ? {\r\n                  padding: 10,\r\n                  margin: \"0 0 2% 0\",\r\n                  backgroundColor:\r\n                    snapshot?.isDragging && isEdit ? \"#ffffff\" : \"#ffffff\",\r\n                  ...provided?.draggableProps.style,\r\n                }\r\n              : {\r\n                  boxShadow:\r\n                    item?.status === \"active\"\r\n                      ? \" 0 0 5px #6abf48\"\r\n                      : item?.status === \"completed\"\r\n                      ? \" 0 0 5px #d80c05\"\r\n                      : \" 0 0 5px #ebef04\",\r\n                }\r\n          }\r\n        >\r\n          <div className=\"mb-0 d-flex align-items-start justify-content-between\">\r\n            <div className=\"mb-0 d-flex align-items-center justify-content-between\">\r\n              <div\r\n                className=\"circle mr-2\"\r\n                style={{\r\n                  backgroundColor:\r\n                    item?.status === \"active\"\r\n                      ? \"#6abf48\"\r\n                      : item?.status === \"completed\"\r\n                      ? \"#d80c05\"\r\n                      : \"#ebef04\",\r\n                }}\r\n              ></div>\r\n              <p className=\"name mb-0\">{item?.title}</p>\r\n            </div>\r\n            <div>\r\n              {isEdit && (\r\n                <CheckBox\r\n                  showOptions={false}\r\n                  option={item?.id}\r\n                  name=\"status\"\r\n                  type=\"checkbox\"\r\n                  theme=\"orange\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"mb-2 d-flex align-items-start justify-content-between\">\r\n            <div className=\"time-and-date\">\r\n              <p className=\"mb-0\">{moment(item?.startDate).format(\"lll\")}</p>\r\n              {/* <p className=\"mb-0\">{item?.time}</p> */}\r\n            </div>\r\n          </div>\r\n\r\n          {isEdit && (\r\n            <>\r\n              <div className=\"mb-2\">\r\n                <span className=\"place\">{item?.place}</span>\r\n              </div>\r\n              <div className=\"user-container d-flex align-items-end justify-content-between\">\r\n                <div className=\"user\">\r\n                  <FontAwesomeIcon icon={faUserAlt} className=\" mr-2\" />\r\n                  <p className=\"price mr-2\">{item?.registration_count}</p>\r\n                  <p className=\"price\">{`${item?.price}$`}</p>\r\n                </div>\r\n                <div className=\"setting\">\r\n                  <SettingCardDropDownMenu\r\n                    selectOptions={[\r\n                      { option: \"Make a copy\" },\r\n                      { option: \"Edit\" },\r\n                      { option: \"Active\" },\r\n                    ]}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </Card>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragappleCard;\r\n","import React from \"react\";\r\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport DragappleCard from \"../DragappleCard\";\r\n\r\nconst DroppableColumn = ({ columnId, column }) => {\r\n  return (\r\n    <>\r\n      <Droppable droppableId={columnId} key={columnId}>\r\n        {(provided, snapshot) => {\r\n          return (\r\n            <>\r\n              <div\r\n                className=\"column-heading w-100\"\r\n                style={{ overflow: \"auto\" }}\r\n              >\r\n                <h3\r\n                  className={`m-0 ${column.title}`}\r\n                  style={{\r\n                    padding: 10,\r\n                  }}\r\n                >\r\n                  {column.title}\r\n                </h3>\r\n              </div>\r\n              <Card\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n                style={{\r\n                  background: snapshot.isDraggingOver ? \"#6abf4836\" : \"white\",\r\n                  width: 250,\r\n                  padding: 5,\r\n                  overflow: \"hidden\",\r\n                  minHeight: 500,\r\n                }}\r\n              >\r\n                {column?.items?.map((item, index) => {\r\n                  return (\r\n                    <Draggable\r\n                      key={item.id}\r\n                      draggableId={item.id}\r\n                      index={index}\r\n                    >\r\n                      {(provided, snapshot) => {\r\n                        return (\r\n                          <DragappleCard\r\n                            isEdit={true}\r\n                            snapshot={snapshot}\r\n                            item={item}\r\n                            {...provided}\r\n                          />\r\n                        );\r\n                      }}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </Card>\r\n            </>\r\n          );\r\n        }}\r\n      </Droppable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DroppableColumn;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ButtonComponent from \"../../components/Button\";\r\nimport { ColumnContext } from \"../AdminPanel\";\r\nimport AddClassFrom from \"../../components/AddClassFrom\";\r\nimport DroppableColumn from \"../DroppableColumn\";\r\nimport ContactFromModal from \"../../components/ContactFromModal\";\r\nimport DropDown from \"../../components/DropDown\";\r\nimport \"./style.css\";\r\n\r\nfunction AdminClassesPage() {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [sucessMessage, setSucessMessage] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n    setSucessMessage(false);\r\n  };\r\n  const handleOpenModal = () => setOpenModal(true);\r\n  let [columnsFromBackend, setColumnsFromBackend] = useContext(ColumnContext);\r\n  const [columns, setColumns] = useState(columnsFromBackend);\r\n  const [isDragged, setIsDragged] = useState(false);\r\n  const selectStatus = [\r\n    { color: \"#6abf48\", option: \"Active\" },\r\n    { color: \"#ebef04\", option: \"Ending Soon\" },\r\n    { color: \"#d80c05\", option: \"Completed\" },\r\n  ];\r\n  const selectActivities = [\r\n    { option: \"All Activities\" },\r\n    { option: \"Tennis\" },\r\n    { option: \"Pilate\" },\r\n    { option: \"Fitness\" },\r\n  ];\r\n  const days = [\r\n    { option: \"All Days\" },\r\n    { option: \"Monday\" },\r\n    { option: \"Tuesday\" },\r\n    { option: \"Wednesday\" },\r\n    { option: \"Thuresday\" },\r\n    { option: \"Friday\" },\r\n    { option: \"Saturday\" },\r\n    { option: \"Sunday\" },\r\n  ];\r\n  useEffect(() => {\r\n    setColumns(columnsFromBackend);\r\n  }, [columnsFromBackend]);\r\n\r\n  useEffect(() => {\r\n    if (isDragged) {\r\n      setColumnsFromBackend(columns);\r\n      setIsDragged(false);\r\n    }\r\n  }, [columns]);\r\n  const onDragEnd = (result, columns, setColumns) => {\r\n    if (!result.destination) return;\r\n    const { source, destination } = result;\r\n    if (source.droppableId !== destination.droppableId) {\r\n      const sourceColumn = columns[source.droppableId];\r\n      const destColumn = columns[destination.droppableId];\r\n      const sourceItems = [...sourceColumn.items];\r\n      const destItems = [...destColumn.items];\r\n      const [removed] = sourceItems.splice(source.index, 1);\r\n      destItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...sourceColumn,\r\n          items: sourceItems,\r\n        },\r\n        [destination.droppableId]: {\r\n          ...destColumn,\r\n          items: destItems,\r\n        },\r\n      });\r\n    } else {\r\n      const column = columns[source.droppableId];\r\n      const copiedItems = [...column.items];\r\n      const [removed] = copiedItems.splice(source.index, 1);\r\n      copiedItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...column,\r\n          items: copiedItems,\r\n        },\r\n      });\r\n    }\r\n  };\r\n  /************************************ end handel modal fun *****************************************/\r\n  const handleCloseButton = () => {\r\n    handleCloseModal();\r\n    setTimeout(() => {\r\n      setSucessMessage(false);\r\n    }, 500);\r\n  };\r\n  const renderModalContent = () => {\r\n    return (\r\n      <AddClassFrom\r\n        handleCloseButton={handleCloseButton}\r\n        handleClose={handleCloseModal}\r\n        setSucessMessage={setSucessMessage}\r\n        setLoader={setLoader}\r\n      />\r\n    );\r\n  };\r\n  /************************************ end handel modal fun *****************************************/\r\n  return (\r\n    <>\r\n      <section className=\"container drag-and-drop-container\">\r\n        <div className=\"controls row\">\r\n          <div className=\"add-container col-12 col-lg-4 col-md-4 mb-2\">\r\n            <div className={\"add-new-task\"}>\r\n              <ButtonComponent\r\n                theme={\"green\"}\r\n                text={`Add New Class`}\r\n                icon={<FontAwesomeIcon icon={faPlus} className=\" mr-2\" />}\r\n                onClickButton={handleOpenModal}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"filter-container col-12 col-md-5 col-lg-5 d-flex\">\r\n            <p>filter: </p>{\" \"}\r\n            <div className=\"dropDown-menu\">\r\n              <DropDown selecteItemsArray={days} name=\"Days\" />\r\n            </div>\r\n            <div className=\"dropDown-menu\">\r\n              <DropDown selecteItemsArray={selectActivities} name=\"Activity\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"sort col-12 col-lg-3 col-md-3 d-flex\">\r\n            <p>sort: </p>\r\n            <div className=\"dropDown-menu\">\r\n              <DropDown selecteItemsArray={selectStatus} name=\"Status\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            overflowX: \"auto\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <DragDropContext\r\n            onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\r\n            onDragStart={() => {\r\n              setIsDragged(true);\r\n            }}\r\n          >\r\n            {Object.entries(columns)?.map(([columnId, column], index) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  key={columnId}\r\n                >\r\n                  <div style={{ marginLeft: 8, marginRight: 8 }}>\r\n                    <DroppableColumn columnId={columnId} column={column} />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </DragDropContext>\r\n        </div>\r\n      </section>\r\n      {/************************************ start modal render *****************************************/}\r\n      <ContactFromModal\r\n        handleClose={handleCloseModal}\r\n        openModal={openModal}\r\n        content={renderModalContent()}\r\n        loader={loader}\r\n        sucessMessage={sucessMessage}\r\n      />\r\n      {/************************************ end modal render *****************************************/}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminClassesPage;\r\n","export default __webpack_public_path__ + \"static/media/share-icon.dfe15492.svg\";","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport ShareIcon from \"./../../assets/images/private-lessons/share-icon.svg\";\r\nimport \"./style.css\";\r\nconst ButtonComponent = ({ text, theme, share, onClickButton, type, icon }) => {\r\n  return (\r\n    <Button\r\n      variant=\"primary \"\r\n      className={`${theme}-btn ml-auto btn ${theme} ${\r\n        share ? \"share-btn\" : \"\"\r\n      }`}\r\n      onClick={onClickButton}\r\n      type={type}\r\n    >\r\n      {share && (\r\n        <span className=\"mr-2\">\r\n          <img src={ShareIcon} />\r\n        </span>\r\n      )}\r\n      <span className={`${icon ? \"mr-2\" : \"\"}`}> {text}</span>\r\n      {icon && <span>{icon}</span>}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonComponent;\r\n"],"sourceRoot":""}