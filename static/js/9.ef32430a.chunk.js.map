{"version":3,"sources":["components/Message/index.jsx","components/ContactFromModal/index.jsx","containers/AdminPanel/index.jsx","components/DropDownMenu/index.jsx","components/AddClassFrom/index.jsx","containers/AdminClassesPage/index.jsx","assets/images/private-lessons/share-icon.svg","components/Button/index.jsx","components/CheckBoxInput/index.jsx","components/CheckBox/index.jsx"],"names":["Message","title","description","className","ContactFromModal","handleClose","openModal","content","loader","sucessMessage","show","onHide","size","aria-labelledby","centered","Header","closeButton","Body","ItemsContext","React","createContext","ColumnContext","AdminPanel","useState","id","name","place","price","status","registration_count","date","time","itemsFromBackend","setItemsFromBackend","potentialClassColumn","items","upcomingClassColumn","inProgressClassColumn","doneClassColumn","columnsFromBackend","setColumnsFromBackend","useEffect","isMobileScreen","useWindowResize","activeClassName","to","path","fallback","Provider","value","exact","from","DropDownMenu","selectOptions","DropdownButton","icon","faEllipsisH","map","option","index","Dropdown","Item","AddClassFrom","setSucessMessage","setLoader","useContext","Form","onSubmit","e","taskData","preventDefault","length","toString","target","setTimeout","onSumbitAddTask","Group","controlId","Label","Control","type","CheckBox","showOptions","Modal","Footer","Button","share","text","theme","AdminClassesPage","setOpenModal","activityName","setActivityName","statusName","setStatusName","dayName","setDayName","handleCloseModal","columns","setColumns","isDragged","setIsDragged","handleCloseButton","faPlus","onClickButton","drop","as","onClick","color","style","backgroundColor","display","width","overflowX","justifyContent","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","removed","column","copiedItems","onDragStart","Object","entries","columnId","flexDirection","alignItems","marginLeft","marginRight","provided","snapshot","overflow","padding","Card","droppableProps","ref","innerRef","background","isDraggingOver","minHeight","item","draggableId","draggableProps","dragHandleProps","margin","isDragging","faUserAlt","placeholder","ButtonComponent","variant","src","ShareIcon","CheckBoxInput","checked","props","defaultChecked","viewBox","visibility","points","toggleSelectOtherCheckBox","setChecked","onChange","event"],"mappings":"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","file":"static/js/9.ef32430a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\nconst Message = ({title ,description}) => {\r\n  return (\r\n    <div className=\"message\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 text-center mb-2\">\r\n          <i className=\"far fa-check-circle message-icon\"></i>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <h4>{title}</h4>\r\n          <p>\r\n          {description&&description}  \r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, {  useState } from \"react\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport Loader from \"../Loader\";\r\nimport Message from \"../Message\";\r\nimport \"./style.css\";\r\nconst ContactFromModal = ({ handleClose, openModal , content , loader , sucessMessage }) => {\r\n  const renderLoader = () => {\r\n    return (\r\n      <div className=\"loading-modal-container\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const renderSucessMessage = () => {\r\n    return <Message title={'Thank You!'} description={'Your submission has been received. You Will be Contacted Shortly'}/>;\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={openModal}\r\n        onHide={handleClose}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"contact-form \"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <h3>Get in touch</h3>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          {!loader && !sucessMessage && content}\r\n          {loader && renderLoader()}\r\n          {sucessMessage && renderSucessMessage()}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactFromModal;\r\n","import React, {  useEffect, useState } from \"react\";\r\nimport useWindowResize from \"../../cutomHooks/useWindowResize\";\r\nimport { NavLink, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport * as LazyComponents from \"./../../utlis/LazyLoading\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { Suspense } from \"react\";\r\nimport Loader from \"../../components/Loader\";\r\nimport \"./style.css\";\r\nexport const ItemsContext = React.createContext();\r\nexport const ColumnContext = React.createContext();\r\nconst AdminPanel = () => {\r\n  const [itemsFromBackend, setItemsFromBackend] = useState([\r\n    {\r\n      id: \"1\",\r\n      name: \"Tennis Class\",\r\n      place: \"The country club\",\r\n      price: \"60\",\r\n      status: \"active\",\r\n      registration_count: \"15/20\",\r\n      date: \"June 10th -Aug 30th\",\r\n      time: \"Monday 7:00PM -8:00PM\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      name: \"Yoga Class\",\r\n      place: \"The country club\",\r\n      price: \"50\",\r\n      status: \"completed\",\r\n      registration_count: \"5/5\",\r\n      date: \"June 10th -Aug 30th\",\r\n      time: \"Monday 7:00PM -8:00PM\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      name: \"Tennis Class\",\r\n      place: \"The country club\",\r\n      price: \"80\",\r\n      status: \"active\",\r\n      registration_count: \"6/10\",\r\n      date: \"June 10th -Aug 30th\",\r\n      time: \"Monday 7:00PM -8:00PM\",\r\n    },\r\n    {\r\n      id: \"4\",\r\n      name: \"Fitness Class\",\r\n      place: \"The country club\",\r\n      price: \"150\",\r\n      status: \"completed\",\r\n      registration_count: \"8/10\",\r\n      date: \"June 10th -Aug 30th\",\r\n      time: \"Monday 7:00PM -8:00PM\",\r\n    },\r\n    {\r\n      id: \"5\",\r\n      name: \"Yoga Class\",\r\n      place: \"The country club\",\r\n      price: \"100\",\r\n      status: \"soon\",\r\n      registration_count: \"7/15\",\r\n      date: \"June 10th -Aug 30th\",\r\n      time: \"Monday 7:00PM -8:00PM\",\r\n    },\r\n  ]);\r\n  const [columnsFromBackend, setColumnsFromBackend] = useState({\r\n    potentialClassColumn: {\r\n      name: \"Potential Classes\",\r\n      items: itemsFromBackend,\r\n    },\r\n    upcomingClassColumn: {\r\n      name: \"Upcoming\",\r\n      items: [],\r\n    },\r\n    inProgressClassColumn: {\r\n      name: \"In Progress\",\r\n      items: [],\r\n    },\r\n    doneClassColumn: {\r\n      name: \"Program Completed\",\r\n      items: [],\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    setColumnsFromBackend({\r\n      potentialClassColumn: {\r\n        name: \"Potential Classes\",\r\n        items: columnsFromBackend.potentialClassColumn.items,\r\n      },\r\n      upcomingClassColumn: {\r\n        name: \"Upcoming\",\r\n        items: columnsFromBackend.upcomingClassColumn.items,\r\n      },\r\n      inProgressClassColumn: {\r\n        name: \"In Progress\",\r\n        items: columnsFromBackend.inProgressClassColumn.items,\r\n      },\r\n      doneClassColumn: {\r\n        name: \"Program Completed\",\r\n        items: columnsFromBackend.doneClassColumn.items,\r\n      },\r\n    });\r\n  }, [itemsFromBackend]);\r\n  const isMobileScreen = useWindowResize();\r\n  return (\r\n    <div className=\"admin-panel-container container-fluid\">\r\n      <div className=\"container\">\r\n        <Nav className={`${isMobileScreen ? \"px-0\" : \"\"} navbar`}>\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            to={`/miles-admin-panel/admin/about`}\r\n            className=\"nav-link\"\r\n          >\r\n            About\r\n          </NavLink>\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            to={`/miles-admin-panel/admin/classes`}\r\n            className=\"nav-link\"\r\n          >\r\n            Classes\r\n          </NavLink>\r\n        </Nav>\r\n      </div>\r\n\r\n      <Switch>\r\n        <Route path={`/miles-admin-panel/admin/about`}>\r\n          <Suspense fallback={<Loader />}>\r\n            <LazyComponents.AdminAboutPage isMobileScreen={isMobileScreen} />\r\n          </Suspense>\r\n        </Route>\r\n        <Route path={`/miles-admin-panel/admin/classes`}>\r\n          <Suspense fallback={<Loader />}>\r\n            <ItemsContext.Provider\r\n              value={[itemsFromBackend, setItemsFromBackend]}\r\n            >\r\n              <ColumnContext.Provider\r\n                value={[columnsFromBackend, setColumnsFromBackend]}\r\n              >\r\n                <LazyComponents.AdminClassesPage />\r\n              </ColumnContext.Provider>\r\n            </ItemsContext.Provider>\r\n          </Suspense>\r\n        </Route>\r\n        <Redirect exact from=\"/miles-admin-panel\" to=\"admin/about\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React, { useState } from \"react\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport { faUserAlt, faEllipsisH } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./style.css\";\r\nconst DropDownMenu = ({ selectOptions }) => {\r\n  return (\r\n    <>\r\n      <DropdownButton\r\n      className=\"dropdown-menu-container\"\r\n        title={<FontAwesomeIcon icon={faEllipsisH} className=\" mr-2\" />}\r\n      >\r\n        {selectOptions.map((option, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <Dropdown.Item>{option.option}</Dropdown.Item>\r\n            </div>\r\n          );\r\n        })}\r\n      </DropdownButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DropDownMenu;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport ButtonComponent from \"../Button\";\r\nimport CheckBox from \"../CheckBox\";\r\nimport Loader from \"../Loader\";\r\nimport Message from \"../Message\";\r\nimport { ColumnContext, ItemsContext } from \"./../../containers/AdminPanel\";\r\n\r\nimport \"./style.css\";\r\nconst AddClassFrom = ({ setSucessMessage, setLoader }) => {\r\n  let [itemsFromBackend, setItemsFromBackend] = useContext(ItemsContext);\r\n  let [columnsFromBackend, setColumnsFromBackend] = useContext(ColumnContext);\r\n\r\n  const selectStatus = [\r\n    {\r\n      option: \"active\",\r\n    },\r\n    {\r\n      option: \"completed\",\r\n    },\r\n    {\r\n      option: \"soon\",\r\n    },\r\n  ];\r\n  useEffect(() => {}, [itemsFromBackend, columnsFromBackend]);\r\n  // submit form\r\n  const onSumbitAddTask = (e) => {\r\n    e.preventDefault();\r\n    let taskData;\r\n    taskData = {\r\n      // this object form api\r\n      id: (itemsFromBackend.length + 1).toString(),\r\n      name: e.target.name.value,\r\n      place: e.target.place.value,\r\n      price: e.target.price.value,\r\n      status: e.target.status.value,\r\n    };\r\n    setItemsFromBackend([...itemsFromBackend, taskData]);\r\n    setColumnsFromBackend({\r\n      potentialClassColumn: {\r\n        name: \"Potential Classes\",\r\n        items: [...columnsFromBackend.potentialClassColumn.items, taskData],\r\n      },\r\n      upcomingClassColumn: {\r\n        name: \"Upcoming\",\r\n        items: columnsFromBackend.upcomingClassColumn.items,\r\n      },\r\n      inProgressClassColumn: {\r\n        name: \"In Progress\",\r\n        items: columnsFromBackend.inProgressClassColumn.items,\r\n      },\r\n      doneClassColumn: {\r\n        name: \"Program Completed\",\r\n        items: columnsFromBackend.doneClassColumn.items,\r\n      },\r\n    });\r\n    // here i handle loader by my hand but it should be handled in interceptor when calling api\r\n    setLoader(true);\r\n    setTimeout(() => {\r\n      setLoader(false);\r\n      setSucessMessage(true);\r\n      taskData = {\r\n        // this object form api\r\n        id: \"\",\r\n        name: \"\",\r\n        place: \"\",\r\n        price: \"\",\r\n        status: \"\",\r\n      };\r\n    }, 500);\r\n  };\r\n  return (\r\n    <>\r\n      <Form onSubmit={(e) => onSumbitAddTask(e)} id=\"addTaskForm\">\r\n        <Form.Group controlId=\"\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"form-data\">\r\n                <Form.Label>Add Class</Form.Label>\r\n                <Form.Control type=\"text\" name=\"name\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <div className=\"form-data\">\r\n                <Form.Label>Place</Form.Label>\r\n                <Form.Control type=\"text\" name=\"place\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <div className=\"form-data\">\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control type=\"text\" name=\"price\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <div className=\"form-data\">\r\n                <Form.Label>status</Form.Label>\r\n                {selectStatus.map((status, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <CheckBox\r\n                        showOptions={true}\r\n                        option={status.option}\r\n                        name=\"status\"\r\n                        type=\"radio\"\r\n                      />\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Modal.Footer>\r\n            <div className=\"button\">\r\n              <ButtonComponent\r\n                share={\"\"}\r\n                text={\"Submit\"}\r\n                theme={\"light-green\"}\r\n                type={\"submit\"}\r\n              />\r\n            </div>\r\n          </Modal.Footer>\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddClassFrom;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { Card, Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport { faUserAlt, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport DropDownMenu from \"../../components/DropDownMenu\";\r\nimport ButtonComponent from \"../../components/Button\";\r\nimport { ColumnContext } from \"../AdminPanel\";\r\nimport CheckBox from \"../../components/CheckBox\";\r\nimport AddClassFrom from \"../../components/AddClassFrom\";\r\nimport \"./style.css\";\r\nimport ContactFromModal from \"../../components/ContactFromModal\";\r\n\r\nfunction AdminClassesPage() {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [activityName, setActivityName] = useState(\"\");\r\n  const [statusName, setStatusName] = useState(\"\");\r\n  const [dayName, setDayName] = useState(\"\");\r\n  \r\n\r\nconst [sucessMessage, setSucessMessage] = useState(false);\r\nconst [loader, setLoader] = useState(false);\r\n  const handleCloseModal = () => {setOpenModal(false) ;setSucessMessage(false)};\r\n  const handleOpenModal = () => setOpenModal(true);\r\n  let [columnsFromBackend, setColumnsFromBackend] = useContext(ColumnContext);\r\n  const [columns, setColumns] = useState(columnsFromBackend);\r\n  const [isDragged, setIsDragged] = useState(false);\r\n  const selectStatus = [\r\n    { color: \"#6abf48\", option: \"Active\" },\r\n    { color: \"#ebef04\", option: \"Ending Soon\" },\r\n    { color: \"#d80c05\", option: \"Completed\" },\r\n  ];\r\n  const selectActivities = [\r\n    { option: \"Tennis\" },\r\n    { option: \"Pilate\" },\r\n    { option: \"Fitness\" },\r\n  ];\r\n  const days = [\r\n    { option: \"Monday\" },\r\n    { option: \"Tuesday\" },\r\n    { option: \"Wednesday\" },\r\n    { option: \"Thuresday\" },\r\n    { option: \"Friday\" },\r\n    { option: \"Saturday\" },\r\n    { option: \"Sunday\" },\r\n  ];\r\n  useEffect(() => {\r\n    setColumns(columnsFromBackend);\r\n  }, [columnsFromBackend]);\r\n\r\n  useEffect(() => {\r\n    if (isDragged) {\r\n      setColumnsFromBackend(columns);\r\n      setIsDragged(false);\r\n    }\r\n  }, [columns]);\r\n  const onDragEnd = (result, columns, setColumns) => {\r\n    if (!result.destination) return;\r\n    const { source, destination } = result;\r\n    if (source.droppableId !== destination.droppableId) {\r\n      const sourceColumn = columns[source.droppableId];\r\n      const destColumn = columns[destination.droppableId];\r\n      const sourceItems = [...sourceColumn.items];\r\n      const destItems = [...destColumn.items];\r\n      const [removed] = sourceItems.splice(source.index, 1);\r\n      destItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...sourceColumn,\r\n          items: sourceItems,\r\n        },\r\n        [destination.droppableId]: {\r\n          ...destColumn,\r\n          items: destItems,\r\n        },\r\n      });\r\n    } else {\r\n      const column = columns[source.droppableId];\r\n      const copiedItems = [...column.items];\r\n      const [removed] = copiedItems.splice(source.index, 1);\r\n      copiedItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...column,\r\n          items: copiedItems,\r\n        },\r\n      });\r\n    }\r\n  };\r\n// ////////////////////////////\r\nconst handleCloseButton = () => {\r\n  handleCloseModal();\r\n  setTimeout(() => {\r\n    setSucessMessage(false);\r\n  }, 500);\r\n};\r\nconst renderModalContent = ()=>{\r\n  return(\r\n    \r\n    <AddClassFrom\r\n    handleCloseButton={handleCloseButton}\r\n    handleClose={handleCloseModal}\r\n    setSucessMessage={setSucessMessage}\r\n    setLoader={setLoader}\r\n     />\r\n  )\r\n}\r\n///////////////////////////////\r\n  return (\r\n    <>\r\n      <section className=\"container drag-and-drop-container\">\r\n        <div className=\"controls row\">\r\n          <div className=\"add-container col-12 col-lg-4 col-md-4 mb-2\">\r\n            <div className={\"add-new-task\"}>\r\n              <ButtonComponent\r\n                theme={\"green\"}\r\n                text={`Add New Class`}\r\n                icon={<FontAwesomeIcon icon={faPlus} className=\" mr-2\" />}\r\n                onClickButton={handleOpenModal}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"filter-container col-12 col-md-5 col-lg-5 d-flex\">\r\n            <p>filter: </p>{\" \"}\r\n            <div className=\"dropDown-menu\">\r\n              <DropdownButton\r\n                id=\"dropdown-item-button\"\r\n                drop=\"down\"\r\n                title={dayName ? dayName : \"Days\"}\r\n              >\r\n                {days.map((option, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Dropdown.Item\r\n                        as=\"li\"\r\n                        onClick={() => {\r\n                          setDayName(option.option);\r\n                        }}\r\n                        className=\"dropDown-list\"\r\n                      >\r\n                        <span> {option.option}</span>\r\n                      </Dropdown.Item>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </DropdownButton>\r\n            </div>\r\n            <div className=\"dropDown-menu\">\r\n              <DropdownButton\r\n                id=\"dropdown-item-button\"\r\n                drop=\"down\"\r\n                title={activityName ? activityName : \"Activity\"}\r\n              >\r\n                {selectActivities.map((option, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Dropdown.Item\r\n                        as=\"li\"\r\n                        onClick={() => {\r\n                          setActivityName(option.option);\r\n                        }}\r\n                        className=\"dropDown-list\"\r\n                      >\r\n                        <span> {option.option}</span>\r\n                      </Dropdown.Item>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </DropdownButton>\r\n            </div>\r\n          </div>\r\n          <div className=\"sort col-12 col-lg-3 col-md-3 d-flex\">\r\n            <p>sort: </p>\r\n            <div className=\"dropDown-menu\">\r\n              <DropdownButton\r\n                id=\"dropdown-item-button\"\r\n                title={statusName ? statusName : \"Status\"}\r\n              >\r\n                {selectStatus.map((option, index) => {\r\n                  return (\r\n                    <div key={index}>\r\n                      <Dropdown.Item\r\n                        as=\"li\"\r\n                        onClick={() => {\r\n                          setStatusName(option.option);\r\n                        }}\r\n                        className=\"dropDown-list\"\r\n                      >\r\n                        <span\r\n                          className=\"circle d-inline-block\"\r\n                          style={{\r\n                            backgroundColor: option.color,\r\n                          }}\r\n                        ></span>\r\n                        <span> {option.option}</span>\r\n                      </Dropdown.Item>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </DropdownButton>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            overflowX: \"auto\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <DragDropContext\r\n            onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\r\n            onDragStart={() => {\r\n              setIsDragged(true);\r\n            }}\r\n          >\r\n            {Object.entries(columns)?.map(([columnId, column], index) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  key={columnId}\r\n                >\r\n                  <div style={{ marginLeft: 8, marginRight: 8 }}>\r\n                    <Droppable droppableId={columnId} key={columnId}>\r\n                      {(provided, snapshot) => {\r\n                        return (\r\n                          <>\r\n                            <div\r\n                              className=\"column-heading w-100\"\r\n                              style={{ overflow: \"auto\" }}\r\n                            >\r\n                              <h3\r\n                                className={`m-0 ${column.name}`}\r\n                                style={{\r\n                                  padding: 10,\r\n                                }}\r\n                              >\r\n                                {column.name}\r\n                              </h3>\r\n                            </div>\r\n                            <Card\r\n                              {...provided.droppableProps}\r\n                              ref={provided.innerRef}\r\n                              style={{\r\n                                background: snapshot.isDraggingOver\r\n                                  ? \"#6abf4836\"\r\n                                  : \"white\",\r\n                                width: 250,\r\n                                padding: 5,\r\n                                overflow: \"hidden\",\r\n                                minHeight: 500,\r\n                              }}\r\n                            >\r\n                              {column?.items?.map((item, index) => {\r\n                                return (\r\n                                  <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}\r\n                                  >\r\n                                    {(provided, snapshot) => {\r\n                                      return (\r\n                                        <Card\r\n                                          className=\"class-card\"\r\n                                          ref={provided.innerRef}\r\n                                          {...provided.draggableProps}\r\n                                          {...provided.dragHandleProps}\r\n                                          style={{\r\n                                            padding: 10,\r\n                                            margin: \"0 0 2% 0\",\r\n                                            backgroundColor: snapshot.isDragging\r\n                                              ? \"#ffffff\"\r\n                                              : \"#ffffff\",\r\n                                            ...provided.draggableProps.style,\r\n                                          }}\r\n                                        >\r\n                                          <div className=\"mb-0 d-flex align-items-start justify-content-between\">\r\n                                            <div className=\"mb-0 d-flex align-items-center justify-content-between\">\r\n                                              <div\r\n                                                className=\"circle mr-2\"\r\n                                                style={{\r\n                                                  backgroundColor:\r\n                                                    item.status === \"active\"\r\n                                                      ? \"#6abf48\"\r\n                                                      : item.status ===\r\n                                                        \"completed\"\r\n                                                      ? \"#d80c05\"\r\n                                                      : \"#ebef04\",\r\n                                                }}\r\n                                              ></div>\r\n                                              <p className=\"name mb-0\">\r\n                                                {item.name}\r\n                                              </p>\r\n                                            </div>\r\n                                            <div>\r\n                                              <CheckBox\r\n                                                showOptions={false}\r\n                                                option={item.id}\r\n                                                name=\"status\"\r\n                                                type=\"checkbox\"\r\n                                                theme='orange'\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                          <div className=\"mb-2 d-flex align-items-start justify-content-between\">\r\n                                            <div className=\"time-and-date\">\r\n                                              <p className=\"mb-0\">\r\n                                                {item.date}\r\n                                              </p>\r\n                                              <p className=\"mb-0\">\r\n                                                {item.time}\r\n                                              </p>\r\n                                            </div>\r\n                                          </div>\r\n\r\n                                          <div className=\"mb-2\">\r\n                                            <span className=\"place\">\r\n                                              {item.place}\r\n                                            </span>\r\n                                          </div>\r\n                                          <div className=\"user-container d-flex align-items-end justify-content-between\">\r\n                                            <div className=\"user\">\r\n                                              <FontAwesomeIcon\r\n                                                icon={faUserAlt}\r\n                                                className=\" mr-2\"\r\n                                              />\r\n                                              <p className=\"price mr-2\">\r\n                                                {item.registration_count}\r\n                                              </p>\r\n                                              <p className=\"price\">{`${item.price}$`}</p>\r\n                                            </div>\r\n                                            <div className=\"setting\">\r\n                                              <DropDownMenu\r\n                                                selectOptions={[\r\n                                                  { option: \"Make a copy\" },\r\n                                                  { option: \"Edit\" },\r\n                                                  { option: \"Active\" },\r\n                                                ]}\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </Card>\r\n                                      );\r\n                                    }}\r\n                                  </Draggable>\r\n                                );\r\n                              })}\r\n                              {provided.placeholder}\r\n                            </Card>\r\n                          </>\r\n                        );\r\n                      }}\r\n                    </Droppable>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </DragDropContext>\r\n        </div>\r\n      </section>\r\n\r\n    {/************************************ start modal render *****************************************/}\r\n    <ContactFromModal\r\n     handleClose={handleCloseModal} \r\n     openModal={openModal}\r\n    content={renderModalContent()}\r\n    loader={loader}\r\n    sucessMessage={sucessMessage}\r\n  />\r\n  {/************************************ end modal render *****************************************/}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminClassesPage;\r\n","export default __webpack_public_path__ + \"static/media/share-icon.dfe15492.svg\";","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport ShareIcon from \"./../../assets/images/private-lessons/share-icon.svg\";\r\nimport \"./style.css\";\r\nconst ButtonComponent = ({ text, theme, share, onClickButton, type, icon }) => {\r\n  return (\r\n    <Button\r\n      variant=\"primary \"\r\n      className={`${theme}-btn ml-auto btn ${theme} ${\r\n        share ? \"share-btn\" : \"\"\r\n      }`}\r\n      onClick={onClickButton}\r\n      type={type}\r\n    >\r\n      {share && (\r\n        <span className=\"mr-2\">\r\n          <img src={ShareIcon} />\r\n        </span>\r\n      )}\r\n      <span className={`${icon ? \"mr-2\" : \"\"}`}> {text}</span>\r\n      {icon && <span>{icon}</span>}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonComponent;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nconst CheckBoxInput = ({ checked, name , theme ,  ...props }) => (\r\n  <div className={`checkbox-container mr-2 ${theme?theme:\"\"}`}>\r\n    <input\r\n      className=\"check-input\"\r\n      defaultChecked={checked}\r\n      name={name}\r\n      {...props}\r\n    />\r\n    <div className={`styled-checkbox ${checked?\"checked\" :\"\"}`} checked={checked} >\r\n      <svg\r\n        className=\"checkbox-icon\"\r\n        viewBox=\"0 0 24 24\"\r\n        style={{\r\n          visibility: checked ? \"visible\" : \"hidden\",\r\n        }}\r\n      >\r\n        <polyline points=\"20 6 9 17 4 12\" />\r\n      </svg>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default CheckBoxInput;\r\n","import React, { useState } from \"react\";\r\nimport CheckBoxInput from \"./../CheckBoxInput\";\r\nimport './style.css';\r\n\r\nconst CheckBox = ({showOptions , option , type  ,name , toggleSelectOtherCheckBox , theme}) => {\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    setChecked(event.target.checked);\r\n    if(toggleSelectOtherCheckBox){\r\n      toggleSelectOtherCheckBox()\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkbox-label-container\">\r\n      <label>\r\n        <CheckBoxInput theme={theme} checked={checked} onChange={handleCheckboxChange} name={name} type={type}/>\r\n        {showOptions&&<span >{option}</span>}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n"],"sourceRoot":""}