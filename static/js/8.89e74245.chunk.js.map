{"version":3,"sources":["components/CheckBox/index.jsx","components/Message/index.jsx","components/SelectMenu/index.jsx","containers/AdminPanel/index.jsx","components/DropDownMenu/index.jsx","components/AddClassFromModal/index.jsx","containers/AdminClassesPage/index.jsx","assets/images/private-lessons/share-icon.svg","components/Button/index.jsx"],"names":["CheckBox","option","showOptions","theme","name","onClick","type","useState","selected","setSelected","className","id","value","htmlFor","Message","title","description","SelectMenuComponent","filters","isOpen","setIsOpen","Toggle","as","Card","Header","eventKey","e","icon","faChevronDown","Collapse","map","filter","index","ItemsContext","React","createContext","ColumnContext","AdminPanel","place","price","status","itemsFromBackend","setItemsFromBackend","potentialClassColumn","items","upcomingClassColumn","inProgressClassColumn","doneClassColumn","columnsFromBackend","setColumnsFromBackend","useEffect","isMobileScreen","useWindowResize","activeClassName","to","path","fallback","Provider","exact","from","DropDownMenu","selectOptions","DropdownButton","faEllipsisH","Dropdown","Item","AddClassFromModal","handleClose","openModal","sucessMessage","setSucessMessage","loader","setLoader","useContext","selectStatus","Modal","show","onHide","setTimeout","size","aria-labelledby","centered","closeButton","Body","Form","onSubmit","taskData","preventDefault","length","toString","target","onSumbitAddTask","Group","controlId","Label","Control","Footer","Button","share","text","Loader","AdminClassesPage","setOpenModal","selectedName","setSelectedName","columns","setColumns","isDragged","setIsDragged","faPlus","onClickButton","style","display","width","overflowX","justifyContent","onDragEnd","result","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","splice","removed","column","copiedItems","onDragStart","Object","entries","columnId","flexDirection","alignItems","marginLeft","marginRight","provided","snapshot","overflow","padding","droppableProps","ref","innerRef","background","isDraggingOver","minHeight","item","draggableId","draggableProps","dragHandleProps","margin","backgroundColor","isDragging","faUserAlt","placeholder","ButtonComponent","variant","src","ShareIcon"],"mappings":"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","file":"static/js/8.89e74245.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\nconst CheckBox = ({ option, showOptions , theme, name ,onClick , type}) => {\r\n  \r\n  const [selected, setSelected] = useState(false);\r\n  const onSelectCheckBox = () => {\r\n    if (selected) {\r\n      setSelected(false);\r\n    } else {\r\n      setSelected(true);\r\n    }\r\n    if(onClick){\r\n    onClick();}\r\n  };\r\n  return (\r\n    <>\r\n      <div className={`${showOptions?\"single-check-box-row\":\"\"}`} >\r\n        <div className=\"checkbox-form-group\">\r\n          <input name={name} type={`${type==='radio' ?'radio' :'checkbox'}`} id={option} className={\"form-check-box\"} value={option}/>\r\n          <label htmlFor={option} className={`form-check-label ${theme===\"green\"?\"green\":\"\"} ${selected?\"checked\":\"\"}`} onClick={onSelectCheckBox}>\r\n            {showOptions &&<span> {option} </span>}\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nconst Message = ({title ,description}) => {\r\n  return (\r\n    <div className=\"message\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 text-center mb-2\">\r\n          <i className=\"far fa-check-circle message-icon\"></i>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <h4>{title}</h4>\r\n          <p>\r\n          {description&&description}  \r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Accordion, Card, Form } from \"react-bootstrap\";\r\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./style.css\";\r\nimport CheckBox from \"../CheckBox\";\r\nconst SelectMenuComponent = ({ filters }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onToggleAccordion = (e) => {\r\n    if (isOpen) {\r\n      setIsOpen(false);\r\n    } else {\r\n      setIsOpen(true);\r\n    }\r\n  };\r\n  return (\r\n    <Accordion className=\"select-menu mb-2\">\r\n      <Card>\r\n        <Accordion.Toggle\r\n          as={Card.Header}\r\n          eventKey={\"0\"}\r\n          className=\"d-flex align-items-center\"\r\n          onClick={(e) => {\r\n            onToggleAccordion(e);\r\n          }}\r\n        >\r\n          <h3 className=\"my-0\">All classes</h3>\r\n          <span className=\"arrow-icon-container\">\r\n            <FontAwesomeIcon\r\n              icon={faChevronDown}\r\n              className={`${isOpen ? \"rotate\" : \"\"} arrow-icon`}\r\n            />\r\n          </span>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey={\"0\"}>\r\n          <form>\r\n            {filters.map((filter, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <CheckBox option={filter.option} showOptions={true} theme={''}/>\r\n                </div>\r\n              );\r\n            })}\r\n          </form>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SelectMenuComponent;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport useWindowResize from \"../../cutomHooks/useWindowResize\";\r\nimport { NavLink, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport * as LazyComponents from \"./../../utlis/LazyLoading\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { Suspense } from \"react\";\r\nimport Loader from \"../../components/Loader\";\r\nimport \"./style.css\";\r\nexport const ItemsContext =React.createContext();\r\nexport const ColumnContext =React.createContext();\r\nconst AdminPanel = () => {\r\n  const [itemsFromBackend, setItemsFromBackend] = useState([\r\n    { id: \"1\", name: \"Tennis Class\", place: \"The country club\", price: \"60\"  , status:\"active\"},\r\n    { id: \"2\", name: \"Yoga Class\", place: \"The country club\", price: \"50\"  , status:\"completed\"},\r\n    { id: \"3\", name: \"Tennis Class\", place: \"The country club\", price: \"80\"  , status:\"active\"},\r\n    { id: \"4\", name: \"Fitness Class\", place: \"The country club\", price: \"150\" , status:\"completed\" },\r\n    { id: \"5\", name: \"Yoga Class\", place: \"The country club\", price: \"100\" , status:\"soon\" },\r\n  ]);\r\n  const [columnsFromBackend,setColumnsFromBackend] = useState({\r\n    potentialClassColumn: {\r\n      name: \"Potential Classes\",\r\n      items: itemsFromBackend,\r\n    },\r\n    upcomingClassColumn: {\r\n      name: \"Upcoming\",\r\n      items: [],\r\n    },\r\n    inProgressClassColumn: {\r\n      name: \"In Progress\",\r\n      items: [],\r\n    },\r\n    doneClassColumn: {\r\n      name: \"Program Completed\",\r\n      items: [],\r\n    },\r\n  });\r\n  useEffect(()=>{\r\n    setColumnsFromBackend({\r\n      potentialClassColumn: {\r\n        name: \"Potential Classes\",\r\n        items: columnsFromBackend.potentialClassColumn.items,\r\n      },\r\n      upcomingClassColumn: {\r\n        name: \"Upcoming\", \r\n        items: columnsFromBackend.upcomingClassColumn.items,\r\n      },\r\n      inProgressClassColumn: {\r\n        name: \"In Progress\",\r\n        items: columnsFromBackend.inProgressClassColumn.items,\r\n      },\r\n      doneClassColumn: {\r\n        name: \"Program Completed\",\r\n        items: columnsFromBackend.doneClassColumn.items,\r\n      },\r\n    })\r\n  } , [itemsFromBackend])\r\n  const isMobileScreen = useWindowResize();\r\n  return (\r\n    <div className=\"admin-panel-container container-fluid\">\r\n          <div className=\"container\">\r\n            <Nav className={`${isMobileScreen ? \"px-0\" : \"\"} navbar`}>\r\n              <NavLink\r\n                activeClassName=\"active\"\r\n                to={`/miles-admin-panel/admin/about`}\r\n                className=\"nav-link\"\r\n              >\r\n                About\r\n              </NavLink>\r\n              <NavLink\r\n                activeClassName=\"active\"\r\n                to={`/miles-admin-panel/admin/classes`}\r\n                className=\"nav-link\"\r\n              >\r\n                Classes\r\n              </NavLink>\r\n            </Nav>\r\n          </div>\r\n\r\n            <Switch>\r\n              <Route path={`/miles-admin-panel/admin/about`}>\r\n                <Suspense fallback={<Loader />}>\r\n                  <LazyComponents.AdminAboutPage\r\n                    isMobileScreen={isMobileScreen}\r\n                  />\r\n                </Suspense>\r\n              </Route>\r\n              <Route path={`/miles-admin-panel/admin/classes`}>\r\n                <Suspense fallback={<Loader />}>\r\n                  <ItemsContext.Provider value={[itemsFromBackend,setItemsFromBackend]}>\r\n                  <ColumnContext.Provider value={[columnsFromBackend,setColumnsFromBackend]}>\r\n                  <LazyComponents.AdminClassesPage\r\n                  />\r\n                  </ColumnContext.Provider>\r\n                  </ItemsContext.Provider>\r\n                </Suspense>\r\n              </Route>\r\n              <Redirect exact from=\"\" to=\"admin/about\" />\r\n            </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React, { useState } from \"react\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport { faUserAlt, faEllipsisH } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./style.css\";\r\nconst DropDownMenu = ({ selectOptions }) => {\r\n  return (\r\n    <>\r\n      <DropdownButton\r\n      className=\"dropdown-menu-container\"\r\n        title={<FontAwesomeIcon icon={faEllipsisH} className=\" mr-2\" />}\r\n      >\r\n        {selectOptions.map((option, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <Dropdown.Item>{option.option}</Dropdown.Item>\r\n            </div>\r\n          );\r\n        })}\r\n      </DropdownButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DropDownMenu;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport ButtonComponent from \"../Button\";\r\nimport CheckBox from \"../CheckBox\";\r\nimport Loader from \"../Loader\";\r\nimport Message from \"../Message\";\r\nimport SelectMenuComponent from \"../SelectMenu\";\r\nimport { ColumnContext, ItemsContext } from \"./../../containers/AdminPanel\";\r\n\r\nimport \"./style.css\";\r\nconst AddClassFromModal = ({ handleClose, openModal }) => {\r\n  const [sucessMessage, setSucessMessage] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  let [itemsFromBackend, setItemsFromBackend] = useContext(ItemsContext);\r\n  let [columnsFromBackend, setColumnsFromBackend] = useContext(ColumnContext);\r\n\r\n  const selectStatus = [\r\n    {\r\n      option: \"active\",\r\n    },\r\n    {\r\n      option: \"completed\",\r\n    },\r\n    {\r\n      option: \"soon\",\r\n    },\r\n  ];\r\n  useEffect(() => {}, [itemsFromBackend, columnsFromBackend]);\r\n  const handleCloseButton = () => {\r\n    handleClose();\r\n    setTimeout(() => {\r\n      setSucessMessage(false);\r\n    }, 500);\r\n  };\r\n  // submit form\r\n  const onSumbitAddTask = (e) => {\r\n    e.preventDefault();\r\n    let taskData;\r\n    taskData = {\r\n      // this object form api\r\n      id: (itemsFromBackend.length + 1).toString(),\r\n      name: e.target.name.value,\r\n      place: e.target.place.value,\r\n      price: e.target.price.value,\r\n      status:e.target.status.value,\r\n    };\r\n    setItemsFromBackend([...itemsFromBackend, taskData]);\r\n    setColumnsFromBackend({\r\n      potentialClassColumn: {\r\n        name: \"Potential Classes\",\r\n        items: [...columnsFromBackend.potentialClassColumn.items, taskData],\r\n      },\r\n      upcomingClassColumn: {\r\n        name: \"Upcoming\",\r\n        items: columnsFromBackend.upcomingClassColumn.items,\r\n      },\r\n      inProgressClassColumn: {\r\n        name: \"In Progress\",\r\n        items: columnsFromBackend.inProgressClassColumn.items,\r\n      },\r\n      doneClassColumn: {\r\n        name: \"Program Completed\",\r\n        items: columnsFromBackend.doneClassColumn.items,\r\n      },\r\n    });\r\n    // here i handle loader by my hand but it should be handled in interceptor when calling api\r\n    setLoader(true);\r\n    setTimeout(() => {\r\n      setLoader(false);\r\n      setSucessMessage(true);\r\n    }, 500);\r\n  };\r\n  const renderLoader = () => {\r\n    return (\r\n      <div className=\"loading-modal-container\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  };\r\n  const renderModalContent = () => {\r\n    return (\r\n      <>\r\n        <Form onSubmit={(e) => onSumbitAddTask(e)} id=\"addTaskForm\">\r\n          <Form.Group controlId=\"\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"form-data\">\r\n                  <Form.Label>Add Class</Form.Label>\r\n                  <Form.Control type=\"text\" name=\"name\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <div className=\"form-data\">\r\n                  <Form.Label>Place</Form.Label>\r\n                  <Form.Control type=\"text\" name=\"place\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <div className=\"form-data\">\r\n                  <Form.Label>Price</Form.Label>\r\n                  <Form.Control type=\"text\" name=\"price\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <div className=\"form-data\">\r\n                  <Form.Label>status</Form.Label>\r\n                  {selectStatus.map((status, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <CheckBox\r\n                          showOptions={true}\r\n                          option={status.option}\r\n                          name=\"status\"\r\n                          type=\"radio\"\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Modal.Footer>\r\n              <div className=\"button\">\r\n                <ButtonComponent\r\n                  share={\"\"}\r\n                  text={\"Submit\"}\r\n                  theme={\"light-green\"}\r\n                  type={\"submit\"}\r\n                />\r\n              </div>\r\n            </Modal.Footer>\r\n          </Form.Group>\r\n        </Form>\r\n      </>\r\n    );\r\n  };\r\n  const renderSucessMessage = () => {\r\n    return <Message title=\"Class Added Successfuly\" />;\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={openModal}\r\n        onHide={handleCloseButton}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"contact-form \"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <h3>Add Class</h3>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          {!loader && !sucessMessage && renderModalContent()}\r\n          {loader && renderLoader()}\r\n          {sucessMessage && renderSucessMessage()}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddClassFromModal;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { Card, Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport { faUserAlt, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport DropDownMenu from \"../../components/DropDownMenu\";\r\nimport ButtonComponent from \"../../components/Button\";\r\nimport \"./style.css\";\r\nimport AddClassFromModal from \"../../components/AddClassFromModal\";\r\nimport { ColumnContext, ItemsContext } from \"../AdminPanel\";\r\n\r\nfunction AdminClassesPage() {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [selectedName, setSelectedName] = useState(false);\r\n  const handleCloseModal = () => setOpenModal(false);\r\n  const handleOpenModal = () => setOpenModal(true);\r\n  let [columnsFromBackend, setColumnsFromBackend] = useContext(ColumnContext);\r\n  const [columns, setColumns] = useState(columnsFromBackend);\r\n  const [isDragged, setIsDragged] = useState(false);\r\n  const selectStatus = [\r\n    { option: \"Active\" },\r\n    { option: \"Soon\" },\r\n    { option: \"Completed\" },\r\n  ];\r\n  useEffect(() => {\r\n    setColumns(columnsFromBackend);\r\n  }, [columnsFromBackend]);\r\n\r\n  useEffect(() => {\r\n    if (isDragged) {\r\n      setColumnsFromBackend(columns);\r\n      setIsDragged(false);\r\n    }\r\n  }, [columns]);\r\n  const onDragEnd = (result, columns, setColumns) => {\r\n    if (!result.destination) return;\r\n    const { source, destination } = result;\r\n    if (source.droppableId !== destination.droppableId) {\r\n      const sourceColumn = columns[source.droppableId];\r\n      const destColumn = columns[destination.droppableId];\r\n      const sourceItems = [...sourceColumn.items];\r\n      const destItems = [...destColumn.items];\r\n      const [removed] = sourceItems.splice(source.index, 1);\r\n      destItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...sourceColumn,\r\n          items: sourceItems,\r\n        },\r\n        [destination.droppableId]: {\r\n          ...destColumn,\r\n          items: destItems,\r\n        },\r\n      });\r\n    } else {\r\n      const column = columns[source.droppableId];\r\n      const copiedItems = [...column.items];\r\n      const [removed] = copiedItems.splice(source.index, 1);\r\n      copiedItems.splice(destination.index, 0, removed);\r\n      setColumns({\r\n        ...columns,\r\n        [source.droppableId]: {\r\n          ...column,\r\n          items: copiedItems,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"container drag-and-drop-container\">\r\n        <div className=\"controls\">\r\n          <div className={\"add-new-task\"}>\r\n            <ButtonComponent\r\n              theme={\"green\"}\r\n              text={`Add New Class`}\r\n              icon={<FontAwesomeIcon icon={faPlus} className=\" mr-2\" />}\r\n              onClickButton={handleOpenModal}\r\n            />\r\n          </div>\r\n          <div className=\"sort\">\r\n            <DropdownButton id=\"dropdown-item-button\" title={selectedName?selectedName :\"Sort\"}>\r\n              {selectStatus.map((option, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    <Dropdown.Item as=\"li\" onClick={()=>{setSelectedName(option.option)}}>{option.option}</Dropdown.Item>\r\n                  </div>\r\n                );\r\n              })}\r\n            </DropdownButton>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            overflowX: \"auto\",\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <DragDropContext\r\n            onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\r\n            onDragStart={() => {\r\n              setIsDragged(true);\r\n            }}\r\n          >\r\n            {Object.entries(columns)?.map(([columnId, column], index) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                  key={columnId}\r\n                >\r\n                  <div style={{ marginLeft: 8  , marginRight:8}}>\r\n                    <Droppable droppableId={columnId} key={columnId}>\r\n                      {(provided, snapshot) => {\r\n                        return (\r\n                          <>\r\n                            <div\r\n                              className=\"column-heading w-100\"\r\n                              style={{ overflow: \"auto\" }}\r\n                            >\r\n                              <h3\r\n                                className={`m-0 ${column.name}`}\r\n                                style={{\r\n                                  padding: 10,\r\n                                }}\r\n                              >\r\n                                {column.name}\r\n                              </h3>\r\n                            </div>\r\n                            <Card\r\n                              {...provided.droppableProps}\r\n                              ref={provided.innerRef}\r\n                              style={{\r\n                                background: snapshot.isDraggingOver\r\n                                  ? \"#6abf4836\"\r\n                                  : \"white\",\r\n                                width: 250,\r\n                                padding: 5,\r\n                                overflow: \"hidden\",\r\n                                minHeight: 500,\r\n                              }}\r\n                            >\r\n                              {column?.items?.map((item, index) => {\r\n                                return (\r\n                                  <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}\r\n                                  >\r\n                                    {(provided, snapshot) => {\r\n                                      return (\r\n                                        <Card\r\n                                          className=\"class-card\"\r\n                                          ref={provided.innerRef}\r\n                                          {...provided.draggableProps}\r\n                                          {...provided.dragHandleProps}\r\n                                          style={{\r\n                                            padding: 10,\r\n                                            margin: \"0 0 2% 0\",\r\n                                            backgroundColor: snapshot.isDragging\r\n                                              ? \"#ffffff\"\r\n                                              : \"#ffffff\",\r\n                                            ...provided.draggableProps.style,\r\n                                          }}\r\n                                        >\r\n                                          <div className=\"mb-2 d-flex align-items-start justify-content-between\">\r\n                                            <p className=\"name mb-0\">\r\n                                              {item.name}\r\n                                            </p>\r\n                                            <div\r\n                                              className=\"circle\"\r\n                                              style={{\r\n                                                backgroundColor:\r\n                                                  item.status === \"active\"\r\n                                                    ? \"#6abf48\"\r\n                                                    : item.status ===\r\n                                                      \"completed\"\r\n                                                    ? \"#d80c05\"\r\n                                                    : \"#ebef04\",\r\n                                              }}\r\n                                            ></div>\r\n                                          </div>\r\n                                          <div className=\"mb-2\">\r\n                                            <span className=\"place\">\r\n                                              {item.place}\r\n                                            </span>\r\n                                          </div>\r\n                                          <div className=\"user-container d-flex align-items-end justify-content-between\">\r\n                                            <div className=\"user\">\r\n                                              <FontAwesomeIcon\r\n                                                icon={faUserAlt}\r\n                                                className=\" mr-2\"\r\n                                              />\r\n                                              <p className=\"price\">{`${item.price}$`}</p>\r\n                                            </div>\r\n                                            <div className=\"setting\">\r\n                                              <DropDownMenu\r\n                                                selectOptions={[\r\n                                                  { option: \"Make a copy\" },\r\n                                                  { option: \"Edit\" },\r\n                                                  { option: \"Active\" },\r\n                                                ]}\r\n                                              />\r\n                                            </div>\r\n                                          </div>\r\n                                        </Card>\r\n                                      );\r\n                                    }}\r\n                                  </Draggable>\r\n                                );\r\n                              })}\r\n                              {provided.placeholder}\r\n                            </Card>\r\n                          </>\r\n                        );\r\n                      }}\r\n                    </Droppable>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </DragDropContext>\r\n        </div>\r\n      </section>\r\n\r\n      <AddClassFromModal handleClose={handleCloseModal} openModal={openModal} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminClassesPage;\r\n","export default __webpack_public_path__ + \"static/media/share-icon.dfe15492.svg\";","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport ShareIcon from \"./../../assets/images/private-lessons/share-icon.svg\";\r\nimport \"./style.css\";\r\nconst ButtonComponent = ({ text, theme, share, onClickButton, type, icon }) => {\r\n  return (\r\n    <Button\r\n      variant=\"primary \"\r\n      className={`${theme}-btn ml-auto btn ${theme} ${\r\n        share ? \"share-btn\" : \"\"\r\n      }`}\r\n      onClick={onClickButton}\r\n      type={type}\r\n    >\r\n      {share && (\r\n        <span className=\"mr-2\">\r\n          <img src={ShareIcon} />\r\n        </span>\r\n      )}\r\n      <span className={`${icon ? \"mr-2\" : \"\"}`}> {text}</span>\r\n      {icon && <span>{icon}</span>}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonComponent;\r\n"],"sourceRoot":""}