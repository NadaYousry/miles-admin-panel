{"version":3,"sources":["components/SocialMediaShare/index.jsx","components/Modal/index.jsx","components/Message/index.jsx","components/ContactFromModal/index.jsx","assets/images/about/badge-time-icon.svg","assets/images/about/date-icon.svg","components/Badge/index.jsx","components/DonotFoundYouNeedCard/index.jsx","components/GroupLessonCard/index.jsx","components/SelectMenu/index.jsx","components/GroupLessonCardContainer/index.jsx","containers/GroupLessonsPage/index.jsx","assets/images/private-lessons/share-icon.svg","components/Button/index.jsx","components/CheckBoxInput/index.jsx","components/CheckBox/index.jsx"],"names":["SocialMediaShare","useState","copySuccess","setCopySuccess","textAreaRef","useRef","url","className","Form","Control","type","defaultValue","ref","onClick","e","current","select","document","execCommand","target","focus","FacebookShareButton","FacebookIcon","size","round","TwitterShareButton","TwitterIcon","EmailShareButton","EmailIcon","WhatsappShareButton","WhatsappIcon","ModalComponent","content","handleClose","openModal","image","socailMediaShare","Modal","show","onHide","aria-labelledby","centered","Header","closeButton","Body","src","Message","title","description","ContactFromModal","loader","sucessMessage","BadgeComponent","text","theme","Badge","DateIcon","TimeIcon","alt","DonotFoundYouNeedCard","selectOther","setSelectOther","setOpenModal","setSucessMessage","setLoader","firstName","lasttName","email","countryCode","phoneNumber","clubIntrest","knowTraning","opinion","setContactData","toggleSelectOtherCheckBox","selectIntrests","option","selectHowKnowTraining","icon","faQuestion","share","onClickButton","setTimeout","onSubmit","preventDefault","i","length","checked","push","value","onSumbitContactUs","id","Group","controlId","Label","name","placeholder","map","intrest","index","showOptions","way","as","Footer","GroupLessonCard","lesson","isMobileScreen","Card","groupName","label","groupFor","time","date","Text","place","price","Button","SelectMenuComponent","filters","isOpen","setIsOpen","Accordion","Toggle","eventKey","faChevronDown","Collapse","filter","CheckBox","GroupLessonCardContainer","SelectMenu","GroupLessonsPage","ButtonComponent","variant","ShareIcon","CheckBoxInput","props","defaultChecked","viewBox","style","visibility","points","setChecked","onChange","event"],"mappings":"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AU,IACVpH,UAAU,4BACVM,QAAS,SAACC,GAZd0G,GADED,IASA,UAQE,oBAAIhH,UAAU,OAAd,yBACA,sBAAMA,UAAU,uBAAhB,SACE,cAAC,IAAD,CACEuE,KAAM8C,IACNrH,UAAS,UAAKgH,EAAS,SAAW,GAAzB,sBAIf,cAACE,EAAA,EAAUI,SAAX,CAAoBF,SAAU,IAA9B,SACE,+BACGL,EAAQrB,KAAI,SAAC6B,EAAQ3B,GACpB,OACE,8BACE,cAAC4B,EAAA,EAAD,CACEhC,KAAK,cACLrF,KAAK,WACLkE,OAAQkD,EAAOlD,OACfwB,aAAa,EACb9C,MAAO,MAND6C,iBC8EX6B,G,OA/GkB,SAAC,GAAwB,IAAtBtB,EAAqB,EAArBA,eA+FlC,OACE,sBAAKnG,UAAW,0BAAhB,UACE,cAAC0H,EAAD,CAAqBX,QAhBL,CAClB,CACE1C,OAAO,YAET,CACEA,OAAO,eAET,CACEA,OAAO,eAET,CACEA,OAAO,aA3FU,CACnB,CACEkC,SAAU,wBACVF,UAAW,oBACX5D,YACE,2EACFmE,MAAO,SACPD,MAAO,8BACPL,MAAO,UACPG,KAAM,kBACND,KAAM,mBAER,CACED,SAAU,wBACVF,UAAW,oBACX5D,YACE,2EACFmE,MAAO,SACPD,MAAO,8BACPL,MAAO,UACPG,KAAM,kBACND,KAAM,mBAER,CACED,SAAU,wBACVF,UAAW,oBACX5D,YACE,2EACFmE,MAAO,SACPD,MAAO,8BACPL,MAAO,SACPG,KAAM,kBACND,KAAM,mBAER,CACED,SAAU,wBACVF,UAAW,oBACX5D,YACE,2EACFmE,MAAO,SACPD,MAAO,8BACPL,MAAO,SACPG,KAAM,kBACND,KAAM,mBAER,CACED,SAAU,wBACVF,UAAW,oBACX5D,YACE,2EACFmE,MAAO,SACPD,MAAO,8BACPL,MAAO,SACPG,KAAM,kBACND,KAAM,mBAER,CACED,SAAU,wBACVF,UAAW,oBACX5D,YACE,2EACFmE,MAAO,SACPD,MAAO,8BACPL,MAAO,SACPG,KAAM,kBACND,KAAM,mBAER,CACED,SAAU,wBACVF,UAAW,oBACX5D,YACE,2EACFmE,MAAO,SACPD,MAAO,8BACPL,MAAO,UACPG,KAAM,kBACND,KAAM,oBAqBQd,KAAI,SAACQ,EAAQN,GACzB,OACE,8BACE,cAAC,EAAD,CAAiBM,OAAQA,EAAQC,eAAgBA,KADzCP,MAMd,cAACxC,EAAA,EAAD,CAAuB+C,eAAgBA,SCjG9BwB,UAZU,SAAC,GAAsB,IAArBxB,EAAoB,EAApBA,eACzB,OACE,mCACE,qBAAKnG,UAAU,MAAf,SACM,qBAAKA,UAAU,oBAAf,SACE,cAAC,EAAD,CAA0BmG,eAAgBA,Y,kDCPzC,MAA0B,uC,eCyB1ByB,IArBS,SAAC,GAAuD,IAArD9E,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,MAAO0B,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,cAAevE,EAAiB,EAAjBA,KAAMoE,EAAW,EAAXA,KAClE,OACE,eAACsC,EAAA,EAAD,CACEgB,QAAQ,WACR7H,UAAS,UAAK+C,EAAL,4BAA8BA,EAA9B,YACP0B,EAAQ,YAAc,IAExBnE,QAASoE,EACTvE,KAAMA,EANR,UAQGsE,GACC,sBAAMzE,UAAU,OAAhB,SACE,qBAAKsC,IAAKwF,MAGd,uBAAM9H,UAAS,UAAKuE,EAAO,OAAS,IAApC,cAA4CzB,KAC3CyB,GAAQ,+BAAOA,S,qFCIPwD,EAtBO,SAAC,GAAD,IAAG/C,EAAH,EAAGA,QAASQ,EAAZ,EAAYA,KAAOzC,EAAnB,EAAmBA,MAAYiF,EAA/B,iDACpB,sBAAKhI,UAAS,kCAA6B+C,GAAY,IAAvD,UACE,mCACE/C,UAAU,cACViI,eAAgBjD,EAChBQ,KAAMA,GACFwC,IAEN,qBAAKhI,UAAS,0BAAqBgF,EAAQ,UAAW,IAAMA,QAASA,EAArE,SACE,qBACEhF,UAAU,gBACVkI,QAAQ,YACRC,MAAO,CACLC,WAAYpD,EAAU,UAAY,UAJtC,SAOE,0BAAUqD,OAAO,2B,OCMVb,IApBE,SAAC,GAA8E,IAA7E3B,EAA4E,EAA5EA,YAAcxB,EAA8D,EAA9DA,OAASlE,EAAqD,EAArDA,KAAOqF,EAA8C,EAA9CA,KAAOrB,EAAuC,EAAvCA,0BAA4BpB,EAAW,EAAXA,MAAW,EAC/DrD,oBAAS,GADsD,mBACtFsF,EADsF,KAC7EsD,EAD6E,KAU7F,OACE,qBAAKtI,UAAU,2BAAf,SACE,kCACE,cAAC,EAAD,CAAe+C,MAAOA,EAAOiC,QAASA,EAASuD,SAVxB,SAACC,GAC5BF,EAAWE,EAAM5H,OAAOoE,SACrBb,GACDA,KAOiFqB,KAAMA,EAAMrF,KAAMA,IAChG0F,GAAa,+BAAQxB,W","file":"static/js/8.5fcfdeb6.chunk.js","sourcesContent":["import React, { Component, useRef, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { faCopy } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  EmailShareButton,\r\n  FacebookShareButton,\r\n  HatenaShareButton,\r\n  InstapaperShareButton,\r\n  LineShareButton,\r\n  LinkedinShareButton,\r\n  LivejournalShareButton,\r\n  MailruShareButton,\r\n  OKShareButton,\r\n  PinterestShareButton,\r\n  PocketShareButton,\r\n  RedditShareButton,\r\n  TelegramShareButton,\r\n  TumblrShareButton,\r\n  TwitterShareButton,\r\n  ViberShareButton,\r\n  VKShareButton,\r\n  WhatsappShareButton,\r\n  WorkplaceShareButton,\r\n} from \"react-share\";\r\nimport {\r\n  EmailIcon,\r\n  FacebookIcon,\r\n  FacebookMessengerIcon,\r\n  HatenaIcon,\r\n  InstapaperIcon,\r\n  LineIcon,\r\n  LinkedinIcon,\r\n  LivejournalIcon,\r\n  MailruIcon,\r\n  OKIcon,\r\n  PinterestIcon,\r\n  PocketIcon,\r\n  RedditIcon,\r\n  TelegramIcon,\r\n  TumblrIcon,\r\n  TwitterIcon,\r\n  ViberIcon,\r\n  VKIcon,\r\n  WeiboIcon,\r\n  WhatsappIcon,\r\n  WorkplaceIcon,\r\n} from \"react-share\";\r\nimport \"./style.css\";\r\nconst SocialMediaShare = () => {\r\n  const [copySuccess, setCopySuccess] = useState(\"\");\r\n  const textAreaRef = useRef(null);\r\n  function copyToClipboard(e) {\r\n    textAreaRef.current.select();\r\n    document.execCommand(\"copy\");\r\n    // This is just personal preference.\r\n    // I prefer to not show the the whole text area selected.\r\n    e.target.focus();\r\n    setCopySuccess(\"Copied!\");\r\n  }\r\n\r\n  const url =\r\n    \"https://booktennislessons.com/app/Frontend/registerProgram/209?fbclid=IwAR1VQ6t93HvxH_LfIQVtjn_3Ngqfo-AoHbf0EbQFEXAohDUBDN-ngMvtr10\";\r\n  return (\r\n    <div className=\"d-flex flex-column align-items-center justify-content-center\">\r\n      <div className=\"my-4 w-75 d-flex flex-row  align-items-center justify-content-center\">\r\n        <Form.Control\r\n          type=\"text\"\r\n          defaultValue={url}\r\n          className=\"\"\r\n          ref={textAreaRef}\r\n        />\r\n        <div className=\"copy-container\">\r\n        <span className=\"copied mx-3 d-block\">{copySuccess}</span>\r\n        <i className=\"far fa-copy copy-link mx-3  d-block\" onClick={copyToClipboard}></i>\r\n        </div>\r\n      </div>\r\n      <section className=\"social-media-share mb-5\">\r\n        <FacebookShareButton url={`${url}`} className=\"facebook\">\r\n          <FacebookIcon size={\"2.5rem\"} round />\r\n        </FacebookShareButton>\r\n\r\n        <TwitterShareButton url={`${url}`} className=\"twitter\">\r\n          <TwitterIcon size={\"2.5rem\"} round />\r\n        </TwitterShareButton>\r\n\r\n        <EmailShareButton url={`${url}`} className=\"email\">\r\n          <EmailIcon size={\"2.5rem\"} round />\r\n        </EmailShareButton>\r\n\r\n        <WhatsappShareButton url={`${url}`} className=\"whatsapp\">\r\n          <WhatsappIcon size={\"2.5rem\"} round />\r\n        </WhatsappShareButton>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialMediaShare;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport SocialMediaShare from \"../SocialMediaShare\";\r\nimport \"./style.css\";\r\nconst ModalComponent = ({\r\n  content,\r\n  handleClose,\r\n  openModal,\r\n  image,\r\n  socailMediaShare,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Modal\r\n      className=\"social-media-modal\"\r\n        show={openModal}\r\n        onHide={handleClose}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton></Modal.Header>\r\n        <Modal.Body>\r\n          {image && (\r\n            <div className=\"image-container w-100\">\r\n              <img src={image} className=\"w-100\" />\r\n            </div>\r\n          )}\r\n          {socailMediaShare &&\r\n          <>\r\n            <div className=\"social-media-content\">\r\n                <h3>Share With Friends</h3>\r\n                <p>Where whould you like to share ?</p>\r\n            </div>\r\n          <SocialMediaShare />\r\n          </>\r\n          }\r\n          {content&&content}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalComponent;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nconst Message = ({title ,description}) => {\r\n  return (\r\n    <div className=\"message\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 text-center mb-2\">\r\n          <i className=\"far fa-check-circle message-icon\"></i>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <h4>{title}</h4>\r\n          <p>\r\n          {description&&description}  \r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, {  useState } from \"react\";\r\nimport {  Modal } from \"react-bootstrap\";\r\nimport Loader from \"../Loader\";\r\nimport Message from \"../Message\";\r\nimport \"./style.css\";\r\nconst ContactFromModal = ({ handleClose, openModal , content , loader , sucessMessage }) => {\r\n  const renderLoader = () => {\r\n    return (\r\n      <div className=\"loading-modal-container\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const renderSucessMessage = () => {\r\n    return <Message title={'Thank You!'} description={'Your submission has been received. You Will be Contacted Shortly'}/>;\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={openModal}\r\n        onHide={handleClose}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"contact-form \"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <h3>Get in touch</h3>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          {!loader && !sucessMessage && content}\r\n          {loader && renderLoader()}\r\n          {sucessMessage && renderSucessMessage()}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactFromModal;\r\n","export default __webpack_public_path__ + \"static/media/badge-time-icon.9d1a20d5.svg\";","export default __webpack_public_path__ + \"static/media/date-icon.a20c961c.svg\";","import React from \"react\";\r\nimport TimeIcon from \"./../../assets/images/about/badge-time-icon.svg\";\r\nimport DateIcon from \"./../../assets/images/about/date-icon.svg\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nimport \"./style.css\";\r\nconst BadgeComponent = ({ type, text, theme }) => {\r\n  return (\r\n    <Badge\r\n    className={`badge d-flex align-items-center ${theme}`}\r\n  >\r\n    {type&&\r\n    <span className=\"icon-container mr-2 d-block\">\r\n      <img src={type===\"date\"?DateIcon:TimeIcon} alt=\"time icon\" className=\"w-100\" />\r\n    </span>\r\n    }\r\n    <span className={` ${theme === \"orange\"?\"\":\"info-container\"}`}>\r\n      <span>{text}</span>\r\n    </span>\r\n  </Badge>\r\n  );\r\n};\r\n\r\nexport default BadgeComponent;\r\n","import React, { useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { faQuestion } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport ButtonComponent from \"../Button\";\r\nimport ContactFromModal from \"../ContactFromModal\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport CheckBox from \"../CheckBox\";\r\nimport \"./style.css\";\r\nconst DonotFoundYouNeedCard = () => {\r\n  const [selectOther, setSelectOther] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const handleCloseModal = () => setOpenModal(false);\r\n  const handleOpenModal = () => setOpenModal(true);\r\n  const [sucessMessage, setSucessMessage] = useState(false);\r\n  const [loader, setLoader] = useState(false);\r\n  const [contactData, setContactData] = useState({\r\n    firstName: \"\",\r\n    lasttName: \"\",\r\n    email: \"\",\r\n    countryCode: \"\",\r\n    phoneNumber: \"\",\r\n    clubIntrest: [],\r\n    knowTraning: [],\r\n    opinion: \"\",\r\n  });\r\n  \r\n    /************************************ start sbmit fun *****************************************/\r\n  const toggleSelectOtherCheckBox = () => {\r\n    if (selectOther) {\r\n      setSelectOther(false);\r\n    } else {\r\n      setSelectOther(true);\r\n    }\r\n  };\r\n  const handleCloseButton = () => {\r\n    handleCloseModal();\r\n    setTimeout(() => {\r\n      setSucessMessage(false);\r\n      setContactData({\r\n        firstName: \"\",\r\n        lasttName: \"\",\r\n        email: \"\",\r\n        countryCode: \"\",\r\n        phoneNumber: \"\",\r\n        clubIntrest: [],\r\n        knowTraning: [],\r\n        opinion: \"\",\r\n      });\r\n    }, 500);\r\n  };\r\n  // submit form\r\n  const onSumbitContactUs = (e) => {\r\n    let clubIntrest = [];\r\n    let knowTraning = [];\r\n    e.preventDefault();\r\n    // loop on club intrests\r\n    for (let i = 0; i < e.target.clubIntrest.length; i++) {\r\n      if (e.target.clubIntrest[i].checked) {\r\n        clubIntrest.push(e.target.clubIntrest[i].value);\r\n      }\r\n    }\r\n    // loop on how did you know about us\r\n    for (let i = 0; i < e.target.knowTraning.length; i++) {\r\n      if (e.target.knowTraning[i].checked) {\r\n        knowTraning.push(e.target.knowTraning[i].value);\r\n      }\r\n    }\r\n    setContactData({\r\n      // this object form api\r\n      firstName: e.target.firstName.value,\r\n      lasttName: e.target.lasttName.value,\r\n      email: e.target.email.value,\r\n      countryCode: e.target.countryCode.value,\r\n      phoneNumber: e.target.phoneNumber.value,\r\n      clubIntrest: clubIntrest,\r\n      knowTraning: knowTraning,\r\n      opinion: e.target.opinion.value,\r\n    });\r\n    // here i handle loader by my hand but it should be handled in interceptor when calling api\r\n    setLoader(true);\r\n    setTimeout(() => {\r\n      setLoader(false);\r\n      setSucessMessage(true);\r\n    }, 500);\r\n  };\r\n  \r\n    /************************************ end sbmit fun *****************************************/\r\n  const selectIntrests = [\r\n    {\r\n      option: \"Golf\",\r\n    },\r\n    {\r\n      option: \"Hosting an Event\",\r\n    },\r\n    {\r\n      option: \"Tennis\",\r\n    },\r\n    {\r\n      option: \"Zumba\",\r\n    },\r\n    {\r\n      option: \"Pilates\",\r\n    },\r\n    {\r\n      option: \"Fitness Bootcamp\",\r\n    },\r\n  ];\r\n  const selectHowKnowTraining = [\r\n    {\r\n      option: \"Facebook\",\r\n    },\r\n    {\r\n      option: \"Instagram\",\r\n    },\r\n    {\r\n      option: \"Search Engine\",\r\n    },\r\n    {\r\n      option: \"Online Ads\",\r\n    },\r\n  ];\r\n  \r\n    /************************************ start render modal content fun *****************************************/\r\n  const renderModalContent = () => {\r\n    return (\r\n      <>\r\n        <Form onSubmit={(e) => onSumbitContactUs(e)} id=\"contactForm\">\r\n          <Form.Group controlId=\"\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <div className=\"form-data\">\r\n                  <Form.Label>First Name</Form.Label>\r\n                  <Form.Control type=\"text\" name=\"firstName\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <div className=\"form-data\">\r\n                  <Form.Label>Last Name</Form.Label>\r\n                  <Form.Control type=\"text\" name=\"lasttName\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <div className=\"form-data\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control type=\"text\" name=\"email\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 \">\r\n                <div className=\"form-data\">\r\n                  <Form.Label>Phone Number</Form.Label>\r\n                  <div className=\"d-flex\">\r\n                    <div className=\"w-25 mr-3\">\r\n                      <Form.Control\r\n                        type=\"number\"\r\n                        name=\"countryCode\"\r\n                        placeholder=\"country code\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"w-75\">\r\n                      <Form.Control\r\n                        type=\"number\"\r\n                        name=\"phoneNumber\"\r\n                        placeholder=\"phone number\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <div className=\"form-data\">\r\n                  <Form.Label>\r\n                    What are you most interested in at The Country Club At\r\n                    Woodmore. Select all that Apply\r\n                  </Form.Label>\r\n                  {selectIntrests.map((intrest, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <CheckBox\r\n                          showOptions={true}\r\n                          option={intrest.option}\r\n                          name=\"clubIntrest\"\r\n                          type=\"checkbox\"\r\n                          theme=\"\"\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <div className=\"form-data\">\r\n                  <Form.Label>\r\n                    How did you learn about our Programs or Facility training\r\n                    program?\r\n                  </Form.Label>\r\n                  {selectHowKnowTraining.map((way, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <CheckBox\r\n                          showOptions={true}\r\n                          option={way.option}\r\n                          name=\"knowTraning\"\r\n                          type=\"checkbox\"\r\n                          theme=\"\"\r\n                        />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                  <div className=\"mb-2 \">\r\n                  <CheckBox\r\n                    showOptions={true}\r\n                    option={\"other\"}\r\n                    type=\"checkbox\"\r\n                    theme=\"\"\r\n                    toggleSelectOtherCheckBox={toggleSelectOtherCheckBox}\r\n                    />\r\n                   \r\n                    {selectOther && (\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"knowTraning\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <div className=\"form-data\">\r\n                  <Form.Label>\r\n                  Any additional comments or information you would like to Know\r\n                  </Form.Label>\r\n                  <Form.Control as=\"textarea\" name=\"opinion\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Modal.Footer>\r\n              <div className=\"w-50\">\r\n                <ButtonComponent\r\n                  share={\"\"}\r\n                  text={\"Submit\"}\r\n                  theme={\"light-green\"}\r\n                  type={\"submit\"}\r\n                />\r\n              </div>\r\n            </Modal.Footer>\r\n          </Form.Group>\r\n        </Form>\r\n      </> \r\n    );\r\n  };\r\n  \r\n    /************************************ end render modal content fun *****************************************/\r\n\r\n  return (\r\n    <>\r\n    {/************************************ Start don't found container *****************************************/}\r\n    <div className={\"do-not-find-need-container mb-3\"}>\r\n      <Card>\r\n        <Card.Body>\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"col-12 col-lg-7 col-md-7 \">\r\n              <h3>\r\n                Didn’t find what you need\r\n                <FontAwesomeIcon\r\n                  icon={faQuestion}\r\n                  className={\"ml-2 question-icon\"}\r\n                />\r\n              </h3>\r\n              <p className={\"contact-us\"}>\r\n                Please contact us, we always have a class for you.\r\n              </p>\r\n            </div>\r\n            <div className=\"col-12 col-lg-5 col-md-5 d-flex flex-column justify-content-between\">\r\n              <div className=\"my-2 w-100\">\r\n                <ButtonComponent\r\n                  text={\"Get in touch\"}\r\n                  theme={\"black\"}\r\n                  share={false}\r\n                  onClickButton={handleOpenModal}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </div> \r\n\r\n    {/************************************ End don't found container *****************************************/}\r\n\r\n    {/************************************ start modal render *****************************************/}\r\n    <ContactFromModal\r\n    handleClose={handleCloseButton}\r\n    openModal={openModal}\r\n    content={renderModalContent()}\r\n    loader={loader}\r\n    sucessMessage={sucessMessage}\r\n  />\r\n  {/************************************ end modal render *****************************************/}\r\n</>\r\n  );\r\n};\r\n\r\nexport default DonotFoundYouNeedCard;\r\n","import React, { useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport BadgeComponent from \"../Badge\";\r\nimport ButtonComponent from \"../Button\";\r\nimport ModalComponent from \"../Modal\";\r\nimport \"./style.css\";\r\nconst GroupLessonCard = ({ lesson, isMobileScreen }) => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const handleCloseModal = () => setOpenModal(false);\r\n  const handleOpenModal = () => setOpenModal(true);\r\n  return (\r\n    <>\r\n      <div className={\"group-lessons-container mb-3\"}>\r\n        <Card>\r\n          <Card.Header\r\n            as=\"div\"\r\n            className={`d-flex flex-row justify-content-center align-items-center`}\r\n          >\r\n            <div className={`heading-info`}>\r\n              <h5\r\n                className={`group-lessons-trainner-name mb-0 ${\r\n                  isMobileScreen ? \"mb-2\" : \"\"\r\n                }`}\r\n              >\r\n                {lesson.groupName}\r\n              </h5>\r\n              <BadgeComponent type={\"\"} text={lesson.label} theme={\"white\"} />\r\n              <span className={`group-for ml-2`}>{lesson.groupFor}</span>\r\n            </div>\r\n            <div className={`date-and-time-info desktop-screen`}>\r\n              <div\r\n                className={`time-date-container d-flex ${\r\n                  !isMobileScreen\r\n                    ? \"justify-content-end\"\r\n                    : \"justify-content-between\"\r\n                }`}\r\n              >\r\n                <BadgeComponent\r\n                  type={\"time\"}\r\n                  text={lesson.time}\r\n                  theme={\"gray\"}\r\n                />\r\n                <BadgeComponent\r\n                  type={\"date\"}\r\n                  text={lesson.date}\r\n                  theme={\"gray\"}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Card.Header>\r\n          {isMobileScreen && (\r\n            <Card.Header className=\"mobile-screen\">\r\n              <Card.Text\r\n                className={`group-lessons-description ${\r\n                  isMobileScreen ? \"mb-3\" : \"\"\r\n                } mb-1`}\r\n              >\r\n                {lesson.description}\r\n              </Card.Text>\r\n              <div className={`date-and-time-info`}>\r\n                <div\r\n                  className={`time-date-container d-flex ${\r\n                    !isMobileScreen\r\n                      ? \"justify-content-end\"\r\n                      : \"justify-content-between\"\r\n                  }`}\r\n                >\r\n                  <BadgeComponent\r\n                    type={\"time\"}\r\n                    text={lesson.time}\r\n                    theme={\"gray\"}\r\n                  />\r\n                  <BadgeComponent\r\n                    type={\"date\"}\r\n                    text={lesson.date}\r\n                    theme={\"gray\"}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Card.Header>\r\n          )}\r\n          <Card.Body>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 col-lg-7 col-md-5 description d-flex justify-content-center flex-column\">\r\n                <Card.Text\r\n                  className={`group-lessons-description desktop-screen ${\r\n                    isMobileScreen ? \"mb-3\" : \"\"\r\n                  } mb-1`}\r\n                >\r\n                  {lesson.description}\r\n                </Card.Text>\r\n                <span className=\"place-name\">{lesson.place}</span>\r\n              </div>\r\n              <div\r\n                className={`col-12 col-lg-5 col-md-7 price-and-button  d-flex flex-column`}\r\n              >\r\n                <span\r\n                  className={`group-lessons-price  mb-2 ${\r\n                    isMobileScreen ? \"mb-3 text-center\" : \"\"\r\n                  }`}\r\n                >\r\n                  {lesson.price}\r\n                </span>\r\n                <div className=\"d-flex align-items-center flex-column \">\r\n                  <div className=\"my-2 w-100\">\r\n                    <ButtonComponent\r\n                      text={\"Register Now\"}\r\n                      theme={\"orange\"}\r\n                      share={false}\r\n                    />\r\n                  </div>\r\n                  <div className=\" w-100\">\r\n                    <ButtonComponent\r\n                      text={`Share this`}\r\n                      theme={\"white\"}\r\n                      share={true}\r\n                      onClickButton={handleOpenModal}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n\r\n      <ModalComponent\r\n        handleClose={handleCloseModal}\r\n        openModal={openModal}\r\n        socailMediaShare={true}\r\n        image={\"\"}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupLessonCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Accordion, Card, Form } from \"react-bootstrap\";\r\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport CheckBox from \"../CheckBox\";\r\nimport \"./style.css\";\r\nconst SelectMenuComponent = ({ filters }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onToggleAccordion = (e) => {\r\n    if (isOpen) {\r\n      setIsOpen(false);\r\n    } else {\r\n      setIsOpen(true);\r\n    }\r\n  };\r\n  return (\r\n    <Accordion className=\"select-menu mb-2\">\r\n      <Card>\r\n        <Accordion.Toggle\r\n          as={Card.Header}\r\n          eventKey={\"0\"}\r\n          className=\"d-flex align-items-center\"\r\n          onClick={(e) => {\r\n            onToggleAccordion(e);\r\n          }}\r\n        >\r\n          <h3 className=\"my-0\">All classes</h3>\r\n          <span className=\"arrow-icon-container\">\r\n            <FontAwesomeIcon\r\n              icon={faChevronDown}\r\n              className={`${isOpen ? \"rotate\" : \"\"} arrow-icon`}\r\n            />\r\n          </span>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey={\"0\"}>\r\n          <form>\r\n            {filters.map((filter, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <CheckBox\r\n                    name=\"clubIntrest\"\r\n                    type=\"checkbox\"\r\n                    option={filter.option}\r\n                    showOptions={true}\r\n                    theme={\"\"}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </form>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SelectMenuComponent;\r\n","import React from \"react\";\r\nimport GroupLessonCard from \"../GroupLessonCard\";\r\nimport DonotFoundYouNeedCard from \"../DonotFoundYouNeedCard\";\r\nimport SelectMenuComponent from \"../SelectMenu\";\r\nimport \"./style.css\";\r\nconst GroupLessonCardContainer = ({ isMobileScreen }) => {\r\n  const groupLessons = [\r\n    {\r\n      groupFor: \"Beginner - Kids | 4-7\",\r\n      groupName: \"Footwork Patterns\",\r\n      description:\r\n        \"Improve with other players in a similar skill set and a fun environment.\",\r\n      price: \"$20/hr\",\r\n      place: \"Fairland Recreational Park \",\r\n      label: \"pilates\",\r\n      date: \"23 Aug - 13 Sep\",\r\n      time: \"4:00pm - 5:00pm\",\r\n    },\r\n    {\r\n      groupFor: \"Beginner - Kids | 4-7\",\r\n      groupName: \"Footwork Patterns\",\r\n      description:\r\n        \"Improve with other players in a similar skill set and a fun environment.\",\r\n      price: \"$20/hr\",\r\n      place: \"Fairland Recreational Park \",\r\n      label: \"pilates\",\r\n      date: \"23 Aug - 13 Sep\",\r\n      time: \"4:00pm - 5:00pm\",\r\n    },\r\n    {\r\n      groupFor: \"Beginner - Kids | 4-7\",\r\n      groupName: \"Footwork Patterns\",\r\n      description:\r\n        \"Improve with other players in a similar skill set and a fun environment.\",\r\n      price: \"$20/hr\",\r\n      place: \"Fairland Recreational Park \",\r\n      label: \"Tennis\",\r\n      date: \"23 Aug - 13 Sep\",\r\n      time: \"4:00pm - 5:00pm\",\r\n    },\r\n    {\r\n      groupFor: \"Beginner - Kids | 4-7\",\r\n      groupName: \"Footwork Patterns\",\r\n      description:\r\n        \"Improve with other players in a similar skill set and a fun environment.\",\r\n      price: \"$20/hr\",\r\n      place: \"Fairland Recreational Park \",\r\n      label: \"Tennis\",\r\n      date: \"23 Aug - 13 Sep\",\r\n      time: \"4:00pm - 5:00pm\",\r\n    },\r\n    {\r\n      groupFor: \"Beginner - Kids | 4-7\",\r\n      groupName: \"Footwork Patterns\",\r\n      description:\r\n        \"Improve with other players in a similar skill set and a fun environment.\",\r\n      price: \"$20/hr\",\r\n      place: \"Fairland Recreational Park \",\r\n      label: \"Tennis\",\r\n      date: \"23 Aug - 13 Sep\",\r\n      time: \"4:00pm - 5:00pm\",\r\n    },\r\n    {\r\n      groupFor: \"Beginner - Kids | 4-7\",\r\n      groupName: \"Footwork Patterns\",\r\n      description:\r\n        \"Improve with other players in a similar skill set and a fun environment.\",\r\n      price: \"$20/hr\",\r\n      place: \"Fairland Recreational Park \",\r\n      label: \"Tennis\",\r\n      date: \"23 Aug - 13 Sep\",\r\n      time: \"4:00pm - 5:00pm\",\r\n    },\r\n    {\r\n      groupFor: \"Beginner - Kids | 4-7\",\r\n      groupName: \"Footwork Patterns\",\r\n      description:\r\n        \"Improve with other players in a similar skill set and a fun environment.\",\r\n      price: \"$20/hr\",\r\n      place: \"Fairland Recreational Park \",\r\n      label: \"pilates\",\r\n      date: \"23 Aug - 13 Sep\",\r\n      time: \"4:00pm - 5:00pm\",\r\n    },\r\n  ];\r\n  \r\n  const filterOptions=[\r\n    {\r\n      option:\"Kids 4-7\",\r\n    },\r\n    {\r\n      option:\"Junior 8-12\",\r\n    },\r\n    {\r\n      option:\"Teens 13-17\",\r\n    },\r\n    {\r\n      option:\"Adults\",\r\n    }\r\n  ];\r\n  return (\r\n    <div className={\"group-lessons-container\"}>\r\n      <SelectMenuComponent filters={filterOptions} />\r\n      {groupLessons.map((lesson, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <GroupLessonCard lesson={lesson} isMobileScreen={isMobileScreen} />\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      <DonotFoundYouNeedCard isMobileScreen={isMobileScreen} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupLessonCardContainer;\r\n","import React from 'react';\r\nimport GroupLessonCardContainer from '../../components/GroupLessonCardContainer';\r\nconst GroupLessonsPage = ({isMobileScreen}) => {\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n            <div className=\"col-12  px-1 mb-2\">\r\n              <GroupLessonCardContainer isMobileScreen={isMobileScreen} />\r\n            </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupLessonsPage;\r\n","export default __webpack_public_path__ + \"static/media/share-icon.dfe15492.svg\";","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport ShareIcon from \"./../../assets/images/private-lessons/share-icon.svg\";\r\nimport \"./style.css\";\r\nconst ButtonComponent = ({ text, theme, share, onClickButton, type, icon }) => {\r\n  return (\r\n    <Button\r\n      variant=\"primary \"\r\n      className={`${theme}-btn ml-auto btn ${theme} ${\r\n        share ? \"share-btn\" : \"\"\r\n      }`}\r\n      onClick={onClickButton}\r\n      type={type}\r\n    >\r\n      {share && (\r\n        <span className=\"mr-2\">\r\n          <img src={ShareIcon} />\r\n        </span>\r\n      )}\r\n      <span className={`${icon ? \"mr-2\" : \"\"}`}> {text}</span>\r\n      {icon && <span>{icon}</span>}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ButtonComponent;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nconst CheckBoxInput = ({ checked, name , theme ,  ...props }) => (\r\n  <div className={`checkbox-container mr-2 ${theme?theme:\"\"}`}>\r\n    <input\r\n      className=\"check-input\"\r\n      defaultChecked={checked}\r\n      name={name}\r\n      {...props}\r\n    />\r\n    <div className={`styled-checkbox ${checked?\"checked\" :\"\"}`} checked={checked} >\r\n      <svg\r\n        className=\"checkbox-icon\"\r\n        viewBox=\"0 0 24 24\"\r\n        style={{\r\n          visibility: checked ? \"visible\" : \"hidden\",\r\n        }}\r\n      >\r\n        <polyline points=\"20 6 9 17 4 12\" />\r\n      </svg>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default CheckBoxInput;\r\n","import React, { useState } from \"react\";\r\nimport CheckBoxInput from \"./../CheckBoxInput\";\r\nimport './style.css';\r\n\r\nconst CheckBox = ({showOptions , option , type  ,name , toggleSelectOtherCheckBox , theme}) => {\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    setChecked(event.target.checked);\r\n    if(toggleSelectOtherCheckBox){\r\n      toggleSelectOtherCheckBox()\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkbox-label-container\">\r\n      <label>\r\n        <CheckBoxInput theme={theme} checked={checked} onChange={handleCheckboxChange} name={name} type={type}/>\r\n        {showOptions&&<span >{option}</span>}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n"],"sourceRoot":""}